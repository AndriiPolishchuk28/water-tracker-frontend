{"version":3,"file":"static/js/902.cd995d45.chunk.js","mappings":"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","sources":["components/Container/Container.jsx","components/WaterTracker/WaterTracker.styled.jsx","redux/water/selectors.js","components/WaterTracker/WaterTracker.jsx","pages/HomePage/HomePageStyled.js","components/Calendar/Calendar.styled.js","components/Calendar/PopUp/PopUp.styled.js","components/Calendar/PopUp/PopUp.jsx","components/Calendar/Calendar.jsx","components/DailyNorma/DailyNormaStyled.js","components/DailyNorma/DailyModal/DailyModal.jsx","components/DailyNorma/DailyNorma.jsx","components/ModalWL/ModalWL.styled.jsx","components/WaterListModal/WaterListModal.styled.jsx","utils/timeUtils.js","components/WaterListModal/WaterListModal.jsx","components/ModalWL/ModalAddEdit.jsx","components/TodayList/TodayList.styled.jsx","components/TodayList/TodayList.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["import { WrapperContainer } from './ContainerStyled';\n\nconst Container = ({ children }) => {\n  return <WrapperContainer>{children}</WrapperContainer>;\n};\n\nexport default Container;\n","import styled from 'styled-components';\n\nexport const ProgressPanelContainer = styled.div`\n  max-width: 280px;\n  margin-bottom: 40px;\n\n  @media screen and (min-width: 768px) {\n    max-width: 704px;\n    display: flex;\n    align-items: center;\n  }\n  @media only screen and (min-width: 1440px) {\n    max-width: 592px;\n    height: 90px;\n  }\n`;\n\nexport const TodayTitle = styled.h3`\n  margin-bottom: 8px;\n  align-self: baseline;\n  color: var(--primary-color-blue);\n  font-size: 18px;\n  font-weight: 400;\n  line-height: 1.33;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 16px;\n  }\n`;\n\nexport const ProgressContainer = styled.div`\n  margin-bottom: 16px;\n  width: 280px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  @media screen and (min-width: 768px) {\n    width: 356px;\n    height: 90px;\n    margin-right: 12px;\n    margin-bottom: 0;\n  }\n  @media only screen and (min-width: 1440px) {\n    width: 391px;\n    margin-right: 23px;\n  }\n`;\n\nexport const ProgressInput = styled.input`\n  -webkit-appearance: none;\n  appearance: none;\n  width: 256px;\n  border-radius: 30px;\n  margin-bottom: 6px;\n  outline: none;\n\n  background: var(--secondary-color-blue-3);\n  background-image: linear-gradient(\n    var(--secondary-color-blue-2),\n    var(--secondary-color-blue-2)\n  );\n\n  background-repeat: no-repeat;\n\n  &::-webkit-slider-thumb {\n    -webkit-appearance: none;\n    appearance: none;\n    height: 14px;\n    width: 14px;\n    margin-top: -3px;\n\n    border-radius: 50%;\n    background-color: var(--primary-color-white);\n    border: 1px solid var(--primary-color-blue);\n  }\n\n  &::-webkit-slider-runnable-track {\n    height: 8px;\n    border-radius: 30px;\n    background: var(--secondary-color-blue-2);\n    -webkit-appearance: none;\n    box-shadow: none;\n    border: none;\n    background: transparent;\n  }\n\n  &::-webkit-slider-thumb:hover {\n    background: var(--primary-color-white);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 325px;\n  }\n  @media only screen and (min-width: 1440px) {\n    width: 360px;\n  }\n`;\n\nexport const ProgressMarks = styled.div`\n  width: 256px;\n  margin-bottom: 4px;\n  display: flex;\n  justify-content: space-between;\n  & span {\n    font-size: 8px;\n    color: #d7e3ff;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 325px;\n    margin-bottom: 8px;\n  }\n  @media only screen and (min-width: 1440px) {\n    width: 360px;\n    margin-bottom: 4px;\n  }\n`;\n\nexport const ProgressPercents = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  & span {\n    font-family: Roboto, sans-serif;\n    color: var(--Primery-Color-Blue, #407bff);\n    text-align: center;\n    font-size: 12px;\n    line-height: 1.33;\n    width: 30px;\n  }\n\n  & span:nth-child(2) {\n    font-size: 16px;\n    font-weight: 500;\n    line-height: 1.25;\n  }\n`;\n\nexport const AddWaterBtn = styled.button`\n  width: 100%;\n  height: 36px;\n  font-family: Roboto, sans-serif;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n\n  border: none;\n  border-radius: 10px;\n  background: var(--primary-color-blue);\n  box-shadow: 0px 4px 8px 0px rgba(64, 123, 255, 0.34);\n\n  transition: box-shadow 0.25s cubic-bezier(0.4, 0, 0.2, 1);\n\n  & span {\n    font-size: 16px;\n    color: var(--primary-color-white);\n    line-height: 1.25;\n  }\n\n  &:hover {\n    box-shadow: 0px 4px 14px 0px rgba(64, 123, 255, 0.54);\n    cursor: pointer;\n  }\n\n  &:active {\n    box-shadow: 0 0;\n  }\n\n  & svg {\n    width: 24px;\n    height: 24px;\n    stroke: var(--primary-color-white);\n    fill: var(--primary-color-blue);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 336px;\n    height: 44px;\n    & span {\n      font-size: 18px;\n    }\n  }\n  @media only screen and (min-width: 1440px) {\n    width: 178px;\n  }\n`;\n\nexport const SvgPlus = styled.svg`\n  stroke: var(--primary-color-white);\n`;\n","export const selectMonthPercentage = state => state.water.itemsPerMonth;\nexport const selectWaterRate = state => state.auth.user.waterRate;\nexport const selectListWaterOfDay = state => state.water.listWaterOfDay;\nexport const selectDayPercentage = state => state.water.percentOfDailyNorm;\n","// import { openAddWater } from 'redux/modals/modalsSlice';\nimport { icons } from '../../assets/';\nimport {\n  AddWaterBtn,\n  ProgressContainer,\n  ProgressInput,\n  ProgressMarks,\n  ProgressPanelContainer,\n  ProgressPercents,\n  TodayTitle,\n} from './WaterTracker.styled';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport {\n  selectWaterRate,\n  selectListWaterOfDay,\n} from '../../redux/water/selectors';\nimport { useEffect, useState } from 'react';\nimport { getWaterPerDayThunk } from '../../redux/water/operations';\n\nexport const WaterTracker = () => {\n  const dispatch = useDispatch();\n  const [percentages, setPercentages] = useState(null);\n\n  const todayNorma = useSelector(selectWaterRate); // 2\n  const todayData = useSelector(selectListWaterOfDay);\n\n  useEffect(() => {\n    dispatch(getWaterPerDayThunk());\n  }, [dispatch]);\n\n  useEffect(() => {\n    const todayValue = todayData.reduce((acc, water) => acc + water.value, 0);\n    setPercentages((todayValue / (todayNorma * 1000)) * 100);\n  }, [todayData, todayNorma]);\n\n  return (\n    <ProgressPanelContainer>\n      <ProgressContainer>\n        <TodayTitle>Today</TodayTitle>\n        <ProgressInput\n          style={{ backgroundSize: `${percentages}% 100%` }}\n          onChange={() => {}}\n          type=\"range\"\n          value={`${percentages}`}\n          min=\"0\"\n          max=\"100\"\n          step=\"1\"\n        />\n        <ProgressMarks>\n          <span>|</span>\n          <span>|</span>\n          <span>|</span>\n        </ProgressMarks>\n        <ProgressPercents>\n          <span>0%</span>\n          <span>50%</span>\n          <span>100%</span>\n        </ProgressPercents>\n      </ProgressContainer>\n      <AddWaterBtn>\n        <svg>\n          <use href={`${icons}#icon-plus-circle`}></use>\n        </svg>\n        <span>Add water</span>\n      </AddWaterBtn>\n    </ProgressPanelContainer>\n  );\n};\n// onClick={() => dispatch(openAddWater())}\n","import styled from 'styled-components';\nimport backgroundImage from '../../assets/images/bottleImage.png';\n\nexport const HomePageWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 40px;\n  background-color: var(--primary-color-white);\n  margin: 0 auto;\n\n  @media screen and (min-width: 768px) {\n  }\n\n  @media screen and (min-width: 1440px) {\n    max-width: 1440px;\n\n    padding: 20px 0 40px;\n    display: flex;\n    flex-direction: row;\n    gap: 32px;\n  }\n`;\n\nexport const DailyNormaWrapper = styled.div`\n  width: 100%;\n  height: 440px;\n  background-image: url(${backgroundImage});\n  background-position: 50% 35%;\n  background-repeat: no-repeat;\n  background-size: 280px 208px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  @media screen and (min-width: 768px) {\n    background-size: 518px 386px;\n    height: 508px;\n    background-position: 50% 0;\n  }\n\n  @media screen and (min-width: 1440px) {\n    background-size: 738px 548px;\n    width: 592px;\n    padding: 30px 0 16px 0;\n    background-position: 50% 0;\n    height: 680px;\n    justify-content: space-between;\n  }\n`;\n\nexport const MyDailyNorma = styled.div`\n  box-shadow: 0px 4px 8px 0px RGBA(158, 187, 255, 0.12);\n  border: 1px solid var(--secondary-color-blue-1);\n  width: 164px;\n  height: 74px;\n  padding: 8px 20px;\n  border-radius: 10px;\n\n  @media screen and (min-width: 768px) {\n    width: 164px;\n    height: 76px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding: 8px 20px;\n    border-radius: 10px;\n  }\n`;\n\nexport const MyDailyTracker = styled.div`\n  width: 100%;\n  height: 134px;\n\n  @media screen and (min-width: 1440px) {\n    width: 100%;\n    height: 90px;\n  }\n`;\n\nexport const TodayMonthWrapper = styled.div`\n  box-shadow: 0px 4px 14px 0px RGBA(64, 123, 255, 0.3);\n  border-radius: 10px;\n  width: 100%;\n  padding: 24px 8px;\n  background-color: var(--secondary-color-blue-1);\n  height: 836px;\n\n  @media screen and (min-width: 768px) {\n    max-width: 704px;\n    max-height: 688px;\n    padding: 32px 24px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    max-width: 592px;\n    max-height: 680px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const TitleWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  user-select: none;\n`;\n\nexport const MonthText = styled.h3`\n  font-weight: 500;\n  font-size: 24px;\n  line-height: 1.25;\n  color: var(--primary-color-black);\n  @media screen and (min-width: 768px) {\n    font-size: 26px;\n  }\n`;\n\nexport const SvgIcon = styled.svg`\n  fill: var(--primary-color-blue);\n  cursor: pointer;\n`;\n\nexport const MonthYearText = styled.span`\n  padding: 0 16px;\n  font-size: 16px;\n  line-height: 1.25;\n  color: var(--primary-color-blue);\n  width: 140px;\n  display: inline-block;\n  text-align: center;\n`;\n\nexport const Ul = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px 26px;\n  margin-top: 16px;\n  position: relative;\n  @media screen and (min-width: 768px) {\n    gap: 20px 34px;\n  }\n  @media screen and (min-width: 1440px) {\n    gap: 20px 22px;\n  }\n`;\n\nexport const LiItem = styled.li`\n  cursor: pointer;\n  @media screen and (min-width: 768px) {\n    position: relative;\n  }\n  @media screen and (min-width: 1440px) {\n    position: relative;\n  }\n`;\nexport const LiCircle = styled.div`\n  border: 1px solid\n    ${props =>\n      props.$percentage < 100\n        ? `${'var(--secondary-color-orange)'}`\n        : 'transperent'};\n  width: 32px;\n  height: 32px;\n  border-radius: 20px;\n  background-color: var(--primary-color-white);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1.28571;\n  color: var(--primary-color-black);\n  @media screen and (min-width: 768px) {\n    width: 34px;\n    height: 34px;\n  }\n`;\n\nexport const ProcentageWater = styled.p`\n  font-family: 'Roboto', sans-serif;\n  font-size: 10px;\n  line-height: 1.6;\n  color: var(--secondary-color-blue-2);\n  text-align: center;\n  margin-top: 4px;\n`;\n","import styled from 'styled-components';\n\nexport const PopUpWrap = styled.div`\n  width: 280px;\n  padding: 24px 13px;\n  background-color: var(--primary-color-white);\n  border-radius: 10px;\n  box-shadow: 0 4px 4px 0 rgba(64, 123, 255, 0.3);\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  z-index: 10;\n  @media screen and (min-width: 768px) {\n    width: 292px;\n  }\n`;\n\nexport const DateText = styled.p`\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 1.25;\n  color: var(--primary-color-blue);\n`;\n\nexport const WaterInfo = styled.p`\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 1.25;\n  color: var(--primary-color-black);\n`;\n\nexport const AccentColor = styled.span`\n  font-family: 'Roboto', sans-serif;\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 1.3;\n  color: var(--primary-color-blue);\n`;\n","import { PopUpWrap, DateText, WaterInfo, AccentColor } from './PopUp.styled';\n\nconst PopUpCard = ({ waterRate, date, percentOfWaterRate, recordsCount }) => {\n  return (\n    <PopUpWrap>\n      <DateText>{date}</DateText>\n      <WaterInfo>\n        Daily norma: <AccentColor>{waterRate ? waterRate : 0} L</AccentColor>\n      </WaterInfo>\n      <WaterInfo>\n        Fulfillment of the daily norm:{' '}\n        <AccentColor>\n          {percentOfWaterRate ? percentOfWaterRate : 0}%\n        </AccentColor>\n      </WaterInfo>\n      <WaterInfo>\n        How many servings of water: <AccentColor>{recordsCount}</AccentColor>\n      </WaterInfo>\n    </PopUpWrap>\n  );\n};\n\nexport default PopUpCard;\n","import { useEffect, useState } from 'react';\nimport {\n  TitleWrapper,\n  MonthText,\n  SvgIcon,\n  MonthYearText,\n  LiItem,\n  LiCircle,\n  Ul,\n  ProcentageWater,\n} from './Calendar.styled';\nimport PopUpCard from './PopUp/PopUp';\nimport Popup from 'reactjs-popup';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { icons } from '../../assets';\nimport { getMonthPercentageThunk } from '../../redux/water/operations';\nimport {\n  selectListWaterOfDay,\n  selectMonthPercentage,\n  selectWaterRate,\n} from '../../redux/water/selectors';\n\nconst Calendar = () => {\n  const dispatch = useDispatch();\n  const percentagePerMonth = useSelector(selectMonthPercentage);\n  const waterPerDay = useSelector(selectListWaterOfDay);\n  const dailyWaterRate = useSelector(selectWaterRate);\n\n  const [todayDate] = useState(new Date());\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [currentYear, setCurrentYear] = useState(new Date().getFullYear());\n  const monthName = currentDate.toLocaleString('en-US', { month: 'long' });\n  const month = currentDate.getMonth() + 1;\n\n  useEffect(() => {\n    dispatch(getMonthPercentageThunk(`${currentYear}-${month}`));\n  }, [month, currentYear, dispatch, waterPerDay, dailyWaterRate]);\n\n  const goToPreviousMonth = () => {\n    const previousMonth = new Date(\n      currentDate.getFullYear(),\n      currentDate.getMonth() - 1\n    );\n    setCurrentDate(previousMonth);\n    if (currentDate.getMonth() === 0) {\n      setCurrentYear(currentYear - 1);\n    }\n  };\n\n  const goToNextMonth = () => {\n    if (currentDate.getMonth() === 11) {\n      setCurrentYear(currentYear + 1);\n    }\n    const nextMonth = new Date(\n      currentDate.getFullYear(),\n      currentDate.getMonth() + 1\n    );\n    if (\n      currentDate.getFullYear() < todayDate.getFullYear() ||\n      (currentDate.getFullYear() === todayDate.getFullYear() &&\n        currentDate.getMonth() < todayDate.getMonth())\n    ) {\n      setCurrentDate(nextMonth);\n    }\n  };\n\n  return (\n    <>\n      <TitleWrapper>\n        <MonthText>Month</MonthText>\n        <div>\n          <SvgIcon onClick={goToPreviousMonth} width={6} height={10}>\n            <use href={`${icons}#icon-chevron-left`}></use>\n          </SvgIcon>\n          <MonthYearText>\n            {monthName}, {currentYear}\n          </MonthYearText>\n          <SvgIcon onClick={goToNextMonth} width={6} height={10}>\n            <use href={`${icons}#icon-chevron-right`}></use>\n          </SvgIcon>\n        </div>\n      </TitleWrapper>\n      <Ul>\n        {percentagePerMonth.length > 0 &&\n          percentagePerMonth.map(\n            ({ waterRate, date, percentOfWaterRate, recordsCount }) => {\n              return (\n                <Popup\n                  style={{ width: '280px' }}\n                  key={date}\n                  trigger={\n                    <LiItem>\n                      <LiCircle $percentage={percentOfWaterRate}>\n                        {parseInt(date)}\n                      </LiCircle>\n                      <ProcentageWater>\n                        {percentOfWaterRate ? percentOfWaterRate : 0}%\n                      </ProcentageWater>\n                    </LiItem>\n                  }\n                  position={[\n                    'top left',\n                    'top right',\n                    'center center',\n                    'right center',\n                  ]}\n                  on=\"click\"\n                  closeOnDocumentClick\n                  keepTooltipInside={true}\n                  arrow={false}\n                  offsetX={8}\n                  offsetY={8}\n                >\n                  <PopUpCard\n                    date={date}\n                    waterRate={waterRate}\n                    percentOfWaterRate={percentOfWaterRate}\n                    recordsCount={recordsCount}\n                  />\n                </Popup>\n              );\n            }\n          )}\n      </Ul>\n    </>\n  );\n};\n\nexport default Calendar;\n","import styled from 'styled-components';\nimport Dialog from '@mui/material/Dialog';\n\n\nexport const DailyNormaWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 12px;\n`;\nexport const DailyNormaHeader = styled.h4`\nfont-family: \"Roboto\";\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 1.33;\n  color: $primary-color-black;\n  text-align: center;\n  white-space: nowrap;\n`;\n\nexport const WaterRateWrapper = styled.div`\n  display: flex;\n  gap: 12px;\n`;\nexport const WaterRateParagraph = styled.p`\nfont-family: \"Roboto\";\n  font-weight: 700;\n  font-size: 22px;\n  line-height: 1;\n  color: var(--primary-color-blue);\n  @media screen and (min-width: 768px) {\n    font-size: 24px;\n  }\n  @media screen and (min-width: 1440px) {\n  }\n`;\nexport const DailyNormaButton = styled.button`\nfont-family: \"Roboto\"; \nfont-size: 16px;\nline-height: 1.25;\ncolor: #8baeff;\nbackground-color: transparent;\nborder: none;\n&:hover,\n  &:focus {\n    cursor: pointer;\n    color: var(--secondary-color-orange);\n    \n   transition: box-shadow 0.25s cubic-bezier(0.4, 0, 0.2, 1); \n  }\n}\n`;\nexport const DailyNormaDialog = styled(Dialog)`\n  width: 100%;\n  height: 100%;\n  overflow: auto;\n`;\n\nexport const ModalWrapper = styled.div`\n  border-radius: 10px;\n  padding: 24px 12px;\n  width: 280px;\n  height: 816px;\n  margin: 40px auto 0px auto;\n  position: absolute;\n  top: 0px;\n  background-color: var(--primary-color-white);\n  @media screen and (min-width: 768px) {\n    padding: 32px 24px;\n    margin: 40px 32px auto 32px;\n    width: 704px;\n    height: 696px;\n  }\n  @media screen and (min-width: 1440px) {\n    width: 592px;\n    height: 712px;\n\n    margin: 44px auto;\n  }\n`;\n\nexport const ModalCloseBtn = styled.button`\n\n`\nexport const Modalsvg = styled.svg`\n  width: 24px;\n  height: 24px;\n  fill: transparent;\n  stroke: var(--primary-color-blue);\n  &:hover,\n  &:focus {\n    cursor: pointer;\n    stroke: var(--secondary-color-orange);\n   transition: box-shadow 0.25s cubic-bezier(0.4, 0, 0.2, 1); \n`;\n\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 24px;\n`;\n\nexport const ModalHeader = styled.h3`\n  font-weight: 500;\n  font-family: \"Roboto\"; \n  font-size: 26px;\n  line-height: 1.23;\n  color: var(--primary-color-black);\n`;\n\nexport const FormulaWrapper = styled.div`\n  @media screen and (min-width: 768px) {\n    display: flex;\n    gap: 24px;\n  }\n`;\nexport const ModalParagraphForGirl = styled.p`\n    font-size: 16px;\n    font-family: \"Roboto\"; \nline-height: 1.25;\nmargin-bottom: 16px;\ncolor: var(--primary-color-black);\n}`;\n\nexport const ModalParagraphForMan = styled.p`\n  font-size: 16px;\n  font-family: \"Roboto\"; \n  line-height: 1.25;\n  margin-bottom: 12px;\n  color: var(--primary-color-black);\n`;\n\nexport const ModalSpan = styled.span`\n  font-size: 18px;\n  font-family: \"Roboto\"; \n  line-height: 1.33;\n  color: var(--primary-color-blue);\n`;\n\nexport const ModalInfo = styled.p`\n  font-size: 12px;\n  font-family: \"Roboto\"; \n  line-height: 1.33;\n  color: #8f8f8f;\n  border: 1px solid var(--secondary-color-blue-3);\n  border-radius: 10px;\n  padding: 10px;\n  width: 256px;\n  padding: 10px;\n  margin-bottom: 24px;\n  height: 100px;\n  @media screen and (min-width: 768px) {\n    padding: 10px;\n    width: 656px;\n    height: 52px;\n  }\n  @media screen and (min-width: 1440px) {\n    width: 544px;\n    height: 68px;\n  }\n`;\n\nexport const ModalForm = styled.form``;\n\nexport const ModalCalc = styled.p`\n  font-weight: 500;\n  font-family: \"Roboto\"; \n  font-size: 18px;\n  line-height: 1.11;\n  margin-bottom: 16px;\n  color: var(--primary-color-black);\n`;\n\nexport const GenderWrapper = styled.div`\n  display: flex;\n  margin-bottom: 16px;\n`;\n\nexport const ModalLabel = styled.label`\n  font-family: 'Roboto';\n  font-size: 16px;\n  font-family: \"Roboto\"; \n  line-height: 1.25;\n  margin-bottom: 8px;\n  color: var(--primary-color-black);\n`;\n\nexport const ModalRadioInputWoman = styled.input.attrs({ type: 'radio', id: 'woman' })`\n  appearance: none;\n  width: 14px;\n  height: 14px;\n  border: 1px solid var(--primary-color-blue);\n  border-radius: 50%;\n  outline: none;\n  box-shadow: 0 0 5px var(--primary-color-blue);\n\n  &:before {\n    content: '';\n    display: block;\n    width: 8px;\n    height: 8px;\n    margin: 2px;\n    border-radius: 50%;\n  }\n\n  &:checked:before {\n    background: var(--primary-color-blue);\n  }\n`;\n\nexport const ModalRadioInputMan = styled.input.attrs({ type: 'radio', id: 'man' })`\n  appearance: none;\n  width: 14px;\n  height: 14px;\n  border: 1px solid var(--primary-color-blue);\n  border-radius: 50%;\n  outline: none;\n  box-shadow: 0 0 5px var(--primary-color-blue);\n\n  &:before {\n    content: '';\n    display: block;\n    width: 8px;\n    height: 8px;\n    margin: 2px;\n    border-radius: 50%;\n  }\n\n  &:checked:before {\n    background: var(--primary-color-blue);\n  }\n`;\nexport const RadioLabel = styled.label`\n  margin-right: 24px;\n  font-size: 16px;\n  font-family: \"Roboto\"; \n  line-height: 125%;\n  color: var(--primary-color-black);\n`;\n\nexport const InputWrapper = styled.div`\n  margin-bottom: 16px;\n  display: flex;\n  flex-direction: column;\n  width: 256px;\n  height: 72px;\n  @media screen and (min-width: 768px) {\n    width: 656px;\n  }\n  @media screen and (min-width: 1440px) {\n    width: 544px;\n    height: 92px;\n    margin-bottom: 0px;\n  }\n`;\n\nexport const ModalInput = styled.input`\n  border: 1px solid #d7e3ff;\n  font-family: \"Roboto\"; \n  border-radius: 6px;\n  padding: 12px 10px;\n  width: 256px;\n  height: 44px;\n  outline: none;\n  color: var(--primary-color-blue);\n&:: hover,\n&:focus {\n  border: 3px solid #d7e3ff;\n}\n  &::placeholder {\n    color: var(--primary-color-blue);\n  }\n  @media screen and (min-width: 768px) {\n    width: 656px;\n  }\n  @media screen and (min-width: 1440px) {\n    width: 544px;\n  }\n`;\n\nexport const AmountWrapper = styled.div`\n  display: flex; \n  margin-top: 68px;\n  align-items: center;\n  @media screen and (min-width: 768px) {\n    margin-top: 32px;\n  }\n  @media screen and (min-width: 1440px) {\n    margin-top: 16px;\n  }\n`;\n\nexport const Amount = styled.p`\n  width: 190px;\n  font-size: 16px;\n  font-family: \"Roboto\"; \n  line-height: 1.25;\n  color: var(--primary-color-black);\n  @media screen and (min-width: 768px) {\n    width: 376px;\n  }\n`;\n\nexport const ModalButton = styled.button`\n  border-radius: 10px;\n  font-family: \"Roboto\"; \n  padding: 8px 30px;\n  width: 256px;\n  height: 36px;\n  box-shadow: 0 4px 8px 0 rgba(64, 123, 255, 0.34);\n  background: var(--primary-color-blue);\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.25;\n  text-align: center;\n  position: absolute;\n  bottom: 24px;\n  color: var(--primary-color-white);\n  \n  &:hover,\n  &:focus {\n   cursor: pointer;\n    box-shadow: 0 4px 8px 0 rgba(64, 123, 255, 0.34);\n   transition: box-shadow 0.25s cubic-bezier(0.4, 0, 0.2, 1);\n   \n  }\n  @media screen and (min-width: 768px) {\n    bottom: 32px;\n    right: 24px;\n    padding: 10px 30px;\n    width: 160px;\n    height: 44px;\n    \n  }\n`;\n\nexport const WaterIntakeSpan = styled.span`\n  font-weight: 700;\n  font-family: \"Roboto\"; \n  font-size: 18px;\n  line-height: 1.33;\n  margin-left: 6px;\n  color: var(--primary-color-blue);\n`;\n\nexport const InputWrapperWater = styled.div`\n  margin-top: 16px;\n  margin-bottom: 16px;\n  display: flex;\n  flex-direction: column;\n  width: 256px;\n  height: 72px;\n  &:invalid {\n    color: var(--secondary-color-red);\n    border-color: var(--secondary-color-red);}\n  @media screen and (min-width: 768px) {\n    margin-top: 24px;\n    width: 656px;\n    margin-bottom: 24px;\n  }\n  @media screen and (min-width: 1440px) {\n    width: 544px;\n    height: 80px;\n  }\n`;\n\nexport const ModalLabelWater = styled.label`\n  font-weight: 500;\n  font-family: \"Roboto\"; \n  font-size: 18px;\n  margin-bottom: 8px;\n  line-height: 1.11;\n  color: var(--primary-color-black);\n  }\n  @media screen and (min-width: 768px) {\n    margin-bottom: 16px;\n  }\n`;\nexport const ErrorSpan = styled.span`\n  color: red;\n  display: none;\n  font-family: \"Roboto\"; \n  font-size: 12px;\n  line-height: 1.33;\n  margin-top: 4px;\n  @media screen and (min-width: 768px) {\n    margin-top: 8px;\n  }\n`;","import { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { updateWaterRateThunk } from '../../../redux/auth/operations';\nimport {\n  ModalWrapper,\n  Modalsvg,\n  AmountWrapper,\n  ModalLabelWater,\n  InputWrapperWater,\n  ModalCloseBtn,\n  ButtonWrapper,\n  InputWrapper,\n  ModalHeader,\n  GenderWrapper,\n  ModalParagraphForGirl,\n  ModalParagraphForMan,\n  ModalSpan,\n  ModalInfo,\n  FormulaWrapper,\n  ModalForm,\n  ModalCalc,\n  ModalLabel,\n  ModalRadioInputWoman,\n  ModalRadioInputMan,\n  RadioLabel,\n  ModalInput,\n  Amount,\n  ModalButton,\n  WaterIntakeSpan,\n} from '../DailyNormaStyled';\nimport { icons } from '../../../assets';\n\nconst DailyModal = ({ onClose }) => {\n  const dispatch = useDispatch();\n  const [gender, setGender] = useState('woman');\n  const [weight, setWeight] = useState('');\n  const [activityTime, setActivityTime] = useState('');\n  const [requiredWater, setRequiredWater] = useState(0);\n  const [waterToDrink, setwaterToDrink] = useState('');\n\n  const handleWeightChange = event => {\n    let weightValue = parseFloat(event.target.value);\n    if (isNaN(weightValue)) {\n      weightValue = '';\n    }\n    setWeight(weightValue);\n    calculateWaterRate(weightValue, activityTime);\n  };\n\n  const handleActivityTimeChange = event => {\n    let activityTimeValue = parseFloat(event.target.value);\n    if (isNaN(activityTimeValue)) {\n      activityTimeValue = 0;\n    }\n    setActivityTime(activityTimeValue);\n    calculateWaterRate(weight, activityTimeValue);\n  };\n\n  useEffect(() => {\n    calculateWaterRate(gender, weight, activityTime);\n  }, [weight, activityTime, gender]);\n\n  const calculateWaterRate = (gender, weight, activityTime) => {\n    let waterCalculated = 0;\n    if (gender === 'woman') {\n      waterCalculated = weight * 0.03 + activityTime * 0.4;\n    } else if (gender === 'man') {\n      waterCalculated = weight * 0.04 + activityTime * 0.6;\n    }\n    if (waterCalculated === 0) {\n      setRequiredWater(0);\n      return;\n    }\n    setRequiredWater(waterCalculated.toFixed(1));\n  };\n\n  const handleInputChange = event => {\n    setwaterToDrink(event.target.value);\n    let newWaterRate = parseFloat(event.target.value);\n    if (isNaN(newWaterRate)) {\n      setWeight('');\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!waterToDrink) return;\n    dispatch(updateWaterRateThunk({ amountOfWater: waterToDrink }));\n    onClose();\n  };\n\n  return (\n    <ModalWrapper>\n      <ButtonWrapper>\n        <ModalHeader>My daily norma</ModalHeader>\n        <ModalCloseBtn><Modalsvg onClick={onClose}>\n          <use href={`${icons}#icon-x-mark`}></use>\n        </Modalsvg></ModalCloseBtn>\n      </ButtonWrapper>\n      <FormulaWrapper>\n        <ModalParagraphForGirl>\n          For girl:<ModalSpan>V=(M*0,03) + (T*0,4)</ModalSpan>\n        </ModalParagraphForGirl>\n        <ModalParagraphForMan>\n          For man:<ModalSpan>V=(M*0,04) + (T*0,6)</ModalSpan>\n        </ModalParagraphForMan>\n      </FormulaWrapper>\n      <ModalInfo>\n        * V is the volume of the water norm in liters per day, M is your body\n        weight, T is the time of active sports, or another type of activity\n        commensurate in terms of loads (in the absence of these, you must set 0)\n      </ModalInfo>\n      <ModalForm onSubmit={handleSubmit}>\n        <ModalCalc>Calculate your rate:</ModalCalc>\n       \n          <GenderWrapper>\n            <ModalRadioInputWoman\n              id='woman'\n              type=\"radio\"\n              value=\"girl\"\n              checked={gender === 'woman'}\n              onChange={() => setGender('woman')}\n            />\n            <RadioLabel htmlFor=\"woman\">For woman</RadioLabel>\n             <ModalRadioInputMan\n              id='man'\n              type=\"radio\"\n              value=\"man\"\n              checked={gender === 'man'}\n              onChange={() => setGender('man')}\n            />\n<RadioLabel htmlFor=\"man\">For man</RadioLabel>\n          </GenderWrapper>\n        \n        <InputWrapper>\n          <ModalLabel>Your weight in kilograms:</ModalLabel>\n          <ModalInput\n            type=\"text\"\n            value={weight}\n            onChange={handleWeightChange}\n             placeholder='0'\n          />\n        </InputWrapper>\n\n        <InputWrapper>\n          <ModalLabel>\n            The time of active participation in sports or other activities with\n            a high physical. load in hours:\n          </ModalLabel>\n          <ModalInput\n            type=\"text\"\n            value={activityTime}\n            onChange={handleActivityTimeChange}\n             placeholder='0'\n          />\n        </InputWrapper>\n        <AmountWrapper>\n          <Amount>The required amount of water in liters per day:</Amount>\n          <WaterIntakeSpan>{requiredWater} L</WaterIntakeSpan>\n        </AmountWrapper>\n        <InputWrapperWater>\n          <ModalLabelWater>\n            Write down how much water you will drink:\n          </ModalLabelWater>\n          <ModalInput\n            required\n            type=\"text\"\n            value={waterToDrink}\n            onChange={handleInputChange}\n            min={1}\n            max={15000}\n         placeholder='0'\n          />\n        </InputWrapperWater>\n        <ModalButton type=\"submit\">Save</ModalButton>\n      </ModalForm>\n    </ModalWrapper>\n  );\n};\n\nexport default DailyModal;\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectWaterRate } from '../../redux/water/selectors';\nimport DailyModal from './DailyModal/DailyModal';\n\nimport { StyledEngineProvider } from '@mui/material/styles';\nimport {\n  DailyNormaWrapper,\n  WaterRateWrapper,\n  DailyNormaHeader,\n  WaterRateParagraph,\n  DailyNormaDialog,\n  DailyNormaButton,\n} from './DailyNormaStyled';\n\nexport const DailyNorma = () => {\n  const waterRate = useSelector(selectWaterRate);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const handleEditClick = () => {\n    setIsModalOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <DailyNormaWrapper>\n      <DailyNormaHeader>My daily norma</DailyNormaHeader>\n      <WaterRateWrapper>\n        <WaterRateParagraph>{waterRate} L</WaterRateParagraph>\n        <DailyNormaButton onClick={handleEditClick}>Edit</DailyNormaButton>\n      </WaterRateWrapper>\n\n      <StyledEngineProvider injectFirst>\n        <DailyNormaDialog\n          open={isModalOpen} onClose={handleCloseModal}\n          PaperComponent={() => <DailyModal onClose={handleCloseModal} />}\n        ></DailyNormaDialog>\n      </StyledEngineProvider>\n    </DailyNormaWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ModalWrap = styled.div`\nwidth: 800px;\n`;\n\nexport const ModalContent = styled.div`\nwidth: 800px;\n`;\n\nexport const ModalReverse = styled.div`\n// display: flex;\n// flex-direction: column-reverse;\n`\n\nexport const OpenButton = styled.button`\n    cursor: pointer;\n    // width: 182px;\n    height: 24px;\n    font-family: Roboto;\n    font-size: 18px;\n    font-weight: 500;\n    line-height: 24px;\n    text-align: left;\n    color: #407BFF;\n  // border: 1px solid #407BFF;\n  &:before{\n    content: '+';\n    margin: 0 8px 0 0;\n  }\n`;\n","import styled from 'styled-components';\nimport {TextField, MenuItem} from '@mui/material';\n// import { OutlinedInput } from '@mui/material';\n// import { styled } from '@mui/system';\n\nexport const OpenButton = styled.button`\n    width: 280px;\n    height: 36px;\n    padding: 6px 76px 6px 76px;\n    border-radius: 10px 0px 0px 0px;\n    opacity: 0px;\n    background-color: #407BFF;\n`\n\nexport const Container = styled.div`\nposition: relative;\n    width: 100%;\n    max-height: 100%;\n    // margin: 10px auto;\n    padding: 24px 12px;\n    display: flex;\n    flex-direction: column;\n    gap: 24px;\n    // background-color: #ccc;\n    border-radius: 10px;\n        @media only screen and (min-width: 768px) {\n            width: 704px;\n            height: 100%;\n        }\n        @media only screen and (min-width: 1440px){\n            width: 592px;\n        }\n`\n\nexport const ListHeader = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    gap: 50px;\n`\nexport const Title = styled.h2`\n    font-family: Roboto;\n    font-size: 26px;\n    font-weight: 500;\n    line-height: 32px;\n`\nexport const CloseButton = styled.button`\n    width: 24px;\n    height: 24px;\n    border: 1px solid #407BFF;\n    border-radius: 50%;\n    cursor: pointer;\n`\nexport const ResultContainer = styled.div`\n    display: flex;\n    // justify-content: center;\n    align-items: center;\n    gap: 16px;\n    width: 100%;\n    height: 52px;\n    background-color: #ECF2FF;\n    border-radius: 10px;\n    padding: 8px 24px;\n        \n    @media only screen and (min-width: 768px) {\n        width: 256px;\n        height: 52px;\n        padding: 8px 24px;\n    }\n`\nexport const WaterGlass = styled.svg`\nwidth: 24px;\nheight: 24px;\nfill: var(--primary-color-blue);\n`\nexport const ResultMl = styled.span`\ndisplay: block;\nfont-family: Roboto;\nfont-size: 18px;\nfont-weight: 400;\nline-height: 24px;\ncolor: var(--primary-color-blue);\n`\nexport const ResultTime = styled.span`\ndisplay: block;\nfont-family: Roboto;\nfont-size: 12px;\nfont-weight: 400;\nline-height: 24px;\ncolor: #2F2F2F;\n`\nexport const DataContainer = styled.div`\nwidth: 194px;\ndisplay: flex;\nflex-direction: column;\ngap: 16px;\n`\nexport const DataTitle = styled.h3`\nfont-family: Roboto;\nfont-size: 18px;\nfont-weight: 500;\nline-height: 20px;\ncolor: #2F2F2F;\n`\nexport const DataText = styled.p`\nfont-family: Roboto;\nfont-size: 16px;\nfont-weight: 400;\nline-height: 20px;\ncolor: #2F2F2F;\n`\nexport const DataBtnsContainer = styled.div`\nwidth: 100%;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\ngap: 6px;\n`\nexport const DataBtn = styled.button`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nwidth: 44px;\nheight: 44px;\nborder-radius: 50%;\nborder: 1px solid #9EBBFF;\n// opacity: 0px;\ncursor: pointer;\nbackground-color: transparent;\npadding: 0;\n    &:hover{\n        box-shadow: 0px 2px 4px 0px #407BFF33;\n    }\n`\nexport const DataDeleteBtn = styled.button`\n\n`\nexport const DataResult = styled.p`\nwidth: 92px;\nheight: 36px;\npadding: 6px 10px 6px 10px;\nborder-radius: 40px;\nbackground-color: #D7E3FF;\ncolor: #407BFF;\nfont-family: Roboto;\nfont-size: 18px;\nfont-weight: 700;\nline-height: 24px;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\n`\nexport const LabelTime = styled.label`\nfont-family: Roboto;\nfont-size: 16px;\nfont-weight: 400;\nline-height: 20px;\ncolor: #2F2F2F;\n`\nexport const LabelMl = styled.label`\nfont-family: Roboto;\nfont-size: 18px;\nfont-weight: 500;\nline-height: 20px;\ncolor: #2F2F2F;\n`\nexport const InputTime = styled(TextField)`\n    width: 100%;\n    height: 44px;\n    padding: 12px 10px;\n    border-radius: 6px;\n    border: 1px solid #D7E3FF;\n    color: #407BFF;\n    outline: none;\n\n    @media only screen and (min-width: 768px) {\n        width: 544px;\n    }\n    @media only screen and (min-width: 1440px) {\n        width: 100%;  \n    }\n`;\n\nexport const MenuItemCustom = styled(MenuItem)`\nwidth: 100%;\nheight: 44px;\npadding: 12px 10px;\nborder-radius: 6px;\nborder: 1px solid #D7E3FF;\ncolor: #407BFF;\noutline: none;\n\n@media only screen and (min-width: 768px) {\n    width: 544px;\n}\n@media only screen and (min-width: 1440px) {\n    width: 100%;  \n}\n`\n\nexport const InputMl = styled.input`\nwidth: 100%;\nheight: 44px;\npadding: 12px 10px;\nborder-radius: 6px;\nborder: 1px solid #D7E3FF;\ncolor: #407BFF;\noutline: none;\n\n    @media only screen and (min-width: 768px) {\n        width: 544px;  \n    }\n    @media only screen and (min-width: 1440px) {\n        width: 100%;  \n    }\n\n`\nexport const SaveContainer = styled.div`\nwidth: 100%;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\njustify-content: center;\ngap: 16px;\n\n    @media only screen and (min-width: 768px) {\n        flex-direction: row;\n        justify-content: end;\n        gap: 10px;\n    }\n`\nexport const SaveResultTxt = styled.p`\nfont-family: Roboto;\nfont-size: 18px;\nfont-weight: 700;\nline-height: 24px;\ntext-align: center;\ncolor: var(--primary-color-blue);\n\n    @media only screen and (min-width: 768px) {\n        width: 72px;\n    }\n`\nexport const SaveBtn = styled.button`\nwidth: 100%;\npadding: 8px 30px;\nborder-radius: 10px;\nbackground-color: var(--primary-color-blue);\ncolor: #fff;\nfont-family: Roboto;\nfont-size: 16px;\nfont-weight: 500;\nline-height: 20px;\ncursor: pointer;\n    &:hover{\n        box-shadow: 0px 4px 8px 0px #407BFF57;\n    }\n    @media only screen and (min-width: 768px) {\n        width: 166px;\n    }\n`\nexport const IconBtn = styled.svg`\n    width: 24px;\n    height: 24px;\n    fill: var(--primary-color-blue);\n    z-index: 999;\n`","export const getCurrentTime = () => {\n    const currentDate = new Date()\n    let hour = currentDate.getHours().toString().padStart(2, '0')\n    const minutes = currentDate.getMinutes();\n    const formattedHour = hour.toString().padStart(2, '0');\n    // const formattedMinute = Math.ceil(minutes / 5) * 5 .toString().padStart(2, '0');\n    const roundedMinutes = Math.ceil(minutes / 5) * 5;\n    const formattedMinute = roundedMinutes < 10 ? '0' + roundedMinutes : roundedMinutes;\n    return `${formattedHour}:${formattedMinute}`;\n}\n\nexport const generateHours = () => {\n    const hours = [];\n    for (let i = 0; i < 24; i++) {\n        for (let j = 0; j < 60; j += 5) {\n            const hour = i;\n            const formattedHour = `${hour.toString().padStart(2, '0')}:${j.toString().padStart(2, '0')}`;\n            hours.push(formattedHour);\n        }\n    }\n    return hours;\n};\n","import React, { useState } from 'react';\nimport {\n  Container,\n  ListHeader,\n  Title,\n  CloseButton,\n  ResultContainer,\n  WaterGlass,\n  ResultMl,\n  ResultTime,\n  DataBtnsContainer,\n  DataTitle,\n  DataResult,\n  DataText,\n  DataContainer,\n  DataBtn,\n  LabelMl,\n  LabelTime,\n  InputMl,\n  InputTime,\n  SaveContainer,\n  SaveResultTxt,\n  SaveBtn,\n  IconBtn,\n  MenuItemCustom,\n} from './WaterListModal.styled';\nimport sprite from '../../assets/icons/sprite.svg';\n// import { MenuItem } from '@mui/material';\nimport { getCurrentTime, generateHours } from 'utils/timeUtils';\n\nconst WaterListModal = ({ onSave, onClose, title, isVisible }) => {\n  const [result, setResult] = useState(50);\n  const [time, setTime] = useState(getCurrentTime());\n\n  const handleChange = event => {\n    const inputValue = event.target.value;\n    let newValue;\n    if (inputValue === '') {\n      newValue = 0;\n    } else {\n      newValue = parseInt(inputValue, 10);\n    }\n    setResult(newValue);\n  };\n\n  const handleTimeChange = event => {\n    setTime(event.target.value);\n  };\n\n  const increment = () => {\n    const value = result + 50;\n    setResult(value);\n  };\n  const decrement = () => {\n    const value = result - 50;\n    if (value >= 0) {\n      setResult(value);\n    } else {\n      setResult(0);\n    }\n  };\n\n  const handleBlur = event => {\n    setTime(event.target.value);\n  };\n  const handleSave = () => {\n    onSave(result, time);\n    localStorage.setItem('savedResult', result);\n    localStorage.setItem('savedTime', time);\n  };\n\n  return (\n    <Container>\n      <ListHeader>\n        <Title>{title}</Title>\n        <CloseButton onClick={onClose}>\n          <IconBtn>\n            <use href={`${sprite}#icon-close-x`} />\n          </IconBtn>\n        </CloseButton>\n      </ListHeader>\n      {isVisible &&(\n        <ResultContainer>\n          <WaterGlass>\n            <use href={`${sprite}#icon-glass`} />\n          </WaterGlass>\n          <ResultMl>{`${result}ml`}</ResultMl>\n          <ResultTime>{time}</ResultTime>\n        </ResultContainer>\n      ) }\n      <DataContainer>\n        <DataTitle>Correct entered data:</DataTitle>\n        <DataText>Amount of water:</DataText>\n        <DataBtnsContainer>\n          <DataBtn onClick={decrement}>\n            <IconBtn>\n              <use href={`${sprite}#icon-minus-small`} />\n            </IconBtn>\n          </DataBtn>\n          <DataResult>{`${result}ml`}</DataResult>\n          <DataBtn onClick={increment}>\n            <IconBtn>\n              <use href={`${sprite}#icon-plus-small`} />\n            </IconBtn>\n          </DataBtn>\n        </DataBtnsContainer>\n      </DataContainer>\n      <LabelTime>Recording time:</LabelTime>\n      <InputTime\n        select\n        value={time}\n        onBlur={handleBlur}\n        onChange={handleTimeChange}\n      >\n        {[getCurrentTime(), ...generateHours()].map((hour, index) => (\n          <MenuItemCustom key={index} value={hour}>\n            {hour}\n          </MenuItemCustom>\n        ))}\n      </InputTime>\n      <LabelMl>Enter the value of the water used:</LabelMl>\n      <InputMl value={result} onChange={handleChange} />\n      <SaveContainer>\n        <SaveResultTxt>{`${result}ml`}</SaveResultTxt>\n        <SaveBtn onClick={handleSave}>Save</SaveBtn>\n      </SaveContainer>\n    </Container>\n  );\n};\nexport default WaterListModal;\n","import React, { useState } from 'react';\nimport Dialog from '@mui/material/Dialog';\nimport { OpenButton, ModalReverse} from './ModalWL.styled';\nimport WaterListModal from 'components/WaterListModal/WaterListModal';\n\nconst ModalAddEdit = ({ onSave }) => {\n  const [waterData, setWaterData] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  const [isVisible, setIsVisible] = useState(true);\n\n  const handleSaveWaterData = (result, time) => {\n    setWaterData([...waterData, { result, time }]);\n  };\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n  };\n\n  const handleOpenModal = (isEditing) => {\n    setIsModalOpen(true);\n    setIsEditing(isEditing);\n    setIsVisible(!isEditing); \n  };\n\n  return (\n    <ModalReverse>\n      <Dialog open={isModalOpen} onClose={handleCloseModal} maxWidth=\"800px\">\n        <WaterListModal\n          onSave={(result, time) => {\n            handleSaveWaterData(result, time);\n            onSave(result, time);\n            handleCloseModal();\n          }}\n          onClose={handleCloseModal}\n          title={isEditing ? \"Edit the entered amount of water\" : \"Add water\"}\n          isVisible={!isVisible}\n        />\n      </Dialog>\n      <OpenButton onClick={() => handleOpenModal(false)}>Add water</OpenButton>\n    </ModalReverse>\n  );\n};\n\nexport default ModalAddEdit;","import styled from \"styled-components\";\n\nexport const Title = styled.h3`\nfont-family: Roboto;\nfont-size: 24px;\nfont-weight: 500;\nline-height: 30px;\ntext-align: left;\n`\nexport const List = styled.ul`\n    width: 100%;\n    margin-bottom: 16px;\n    max-height: 150px;\n    overflow-y: auto;\n    display: flex;\n    flex-direction: column-reverse;\n`\nexport const ListElem = styled.li`\n    display: flex;\n    justify-content: space-between;\n    border-bottom: 1px solid #D7E3FF;\n    padding: 5px;\n    height: 50px;\n`\nexport const ListElemInfoContainer = styled.div`\nwidth: 70%;\ndisplay: flex;\njustify-content: start;\nalign-items: center;\ngap: 12px;\n\n        @media only screen and (min-width: 768px) {\n            width: 50%;\n        }\n   \n`\nexport const ListElemButtonsContainer = styled.div`\nwidth: 30%;\ndisplay: flex;\njustify-content: end;\nalign-items: center;\ngap: 18px;\n\n        @media only screen and (min-width: 768px) {\n            width: 50%;\n            \n        }\n\n`\nexport const Icon = styled.svg`\nwidth:24px;\nheight:24px;\nfill: #407BFF;\n`\nexport const ResultMl = styled.span`\nfont-family: Roboto;\nfont-size: 18px;\nfont-weight: 400;\nline-height: 24px;\ncolor: #407BFF;\n`\nexport const ResultTime = styled.span`\nfont-family: Roboto;\nfont-size: 12px;\nfont-weight: 400;\nline-height: 24px;\ncolor: #2F2F2F;\n`\nexport const ChangeWaterBtn = styled.button`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nwidth:24px;\nheight:24px;\n// background-color: #000;\nbackground-color: transparent;\ncursor: pointer;\n`\nexport const DeleteWaterBtn = styled.button`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nwidth:24px;\nheight:24px;\n// background-color: #000;\nbackground-color: transparent;\ncursor: pointer;\n`\n\nexport const DeleteBtnIcon = styled.svg`\nwidth: 16px;\nheight: 16px;\nfill: #EF5050;\n`\nexport const ChangeBtnIcon = styled.svg`\nwidth: 16px;\nheight: 16px;\nfill: #9EBBFF\n;\n`","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ModalAddEdit from 'components/ModalWL/ModalAddEdit';\nimport WaterListModal from 'components/WaterListModal/WaterListModal';\nimport {\n  Title,\n  List,\n  ListElem,\n  ListElemInfoContainer,\n  ListElemButtonsContainer,\n  Icon,\n  ResultMl,\n  ResultTime,\n  ChangeWaterBtn,\n  DeleteWaterBtn,\n  DeleteBtnIcon,\n  ChangeBtnIcon,\n} from './TodayList.styled';\nimport sprite from '../../assets/icons/sprite.svg';\nimport Dialog from '@mui/material/Dialog';\nimport {\n  getWaterPerDayThunk,\n  addWaterRateThunk,\n} from '../../redux/water/operations';\nimport { selectListWaterOfDay } from '../../redux/water/selectors';\n\nconst TodayList = () => {\n  const [waterData, setWaterData] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedItemIndex, setSelectedItemIndex] = useState(null);\n  const [isEditing, setIsEditing] = useState(false);\n  const [isVisible, setIsVisible] = useState(true);\n  const dispatch = useDispatch();\n  const listWaterOfDay = useSelector(selectListWaterOfDay);\n\n  useEffect(() => {\n    dispatch(getWaterPerDayThunk());\n  }, [dispatch]);\n\n  useEffect(() => {});\n\n  const handleSaveWaterData = (result, time) => {\n    // const newData = [...waterData, { result, time }];\n    // console.log(newData);\n    // setWaterData(newData);\n    dispatch(addWaterRateThunk({ value: result, time }));\n  };\n\n  const handleEditWaterData = (index, result, time) => {\n    setSelectedItemIndex(index);\n    setIsModalOpen(true);\n    setIsEditing(isEditing);\n    setIsVisible(true);\n  };\n\n  const handleDeleteWaterData = index => {\n    const newData = waterData.filter((_, i) => i !== index);\n    setWaterData(newData);\n  };\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n    setSelectedItemIndex(null);\n  };\n\n  const handleSaveData = (result, time) => {\n    const newData = [...listWaterOfDay];\n    newData[selectedItemIndex] = { result, time };\n    setWaterData(newData);\n    handleCloseModal();\n  };\n\n  return (\n    <>\n      <ModalAddEdit onSave={handleSaveWaterData} />\n      <List>\n        <Title />\n        {listWaterOfDay.map((item, index) => (\n          <ListElem key={index}>\n            <ListElemInfoContainer>\n              <Icon>\n                <use href={`${sprite}#icon-glass`} />\n              </Icon>\n              <ResultMl>{item.value}ml</ResultMl>\n              <ResultTime>{item.time}</ResultTime>\n            </ListElemInfoContainer>\n            <ListElemButtonsContainer>\n              <ChangeWaterBtn\n                onClick={() =>\n                  handleEditWaterData(index, item.result, item.time)\n                }\n              >\n                <ChangeBtnIcon>\n                  <use href={`${sprite}#icon-edit-pensil`} />\n                </ChangeBtnIcon>\n              </ChangeWaterBtn>\n\n              <DeleteWaterBtn onClick={() => handleDeleteWaterData(index)}>\n                <DeleteBtnIcon>\n                  <use href={`${sprite}#icon-trash-bin`} />\n                </DeleteBtnIcon>\n              </DeleteWaterBtn>\n            </ListElemButtonsContainer>\n          </ListElem>\n        ))}\n      </List>\n\n      <Dialog open={isModalOpen} onClose={handleCloseModal} maxWidth=\"800px\">\n        <WaterListModal\n          onSave={handleSaveData}\n          onClose={handleCloseModal}\n          result={waterData[selectedItemIndex]?.result}\n          time={waterData[selectedItemIndex]?.time}\n          title={isEditing ? 'Add water' : 'Edit the entered amount of water'}\n          isVisible={isVisible}\n        />\n      </Dialog>\n    </>\n  );\n};\n\nexport default TodayList;\n","import Container from 'components/Container/Container';\nimport { WaterTracker } from 'components/WaterTracker/WaterTracker';\nimport {\n  HomePageWrapper,\n  DailyNormaWrapper,\n  MyDailyNorma,\n  MyDailyTracker,\n  TodayMonthWrapper,\n} from './HomePageStyled';\nimport Calendar from 'components/Calendar/Calendar';\nimport { DailyNorma } from 'components/DailyNorma/DailyNorma';\nimport Background from 'components/Background/Background';\nimport TodayList from 'components/TodayList/TodayList';\n\nconst HomePage = () => {\n  return (\n    <>\n      <Background />\n      <Container>\n        <HomePageWrapper>\n          <DailyNormaWrapper>\n            <MyDailyNorma>\n              <DailyNorma />\n            </MyDailyNorma>\n            <MyDailyTracker>\n              <WaterTracker></WaterTracker>\n            </MyDailyTracker>\n          </DailyNormaWrapper>\n          <TodayMonthWrapper>\n          <TodayList />\n            <Calendar />\n          </TodayMonthWrapper>\n        </HomePageWrapper>\n      </Container>\n    </>\n  );\n};\n\nexport default HomePage;\n"],"names":["_ref","children","_jsx","WrapperContainer","ProgressPanelContainer","styled","_templateObject","_taggedTemplateLiteral","TodayTitle","_templateObject2","ProgressContainer","_templateObject3","ProgressInput","_templateObject4","ProgressMarks","_templateObject5","ProgressPercents","_templateObject6","AddWaterBtn","_templateObject7","_templateObject8","selectMonthPercentage","state","water","itemsPerMonth","selectWaterRate","auth","user","waterRate","selectListWaterOfDay","listWaterOfDay","WaterTracker","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","percentages","setPercentages","todayNorma","useSelector","todayData","useEffect","getWaterPerDayThunk","todayValue","reduce","acc","value","_jsxs","style","backgroundSize","concat","onChange","type","min","max","step","href","icons","HomePageWrapper","DailyNormaWrapper","backgroundImage","MyDailyNorma","MyDailyTracker","TodayMonthWrapper","TitleWrapper","MonthText","SvgIcon","MonthYearText","Ul","LiItem","LiCircle","props","$percentage","ProcentageWater","PopUpWrap","DateText","WaterInfo","AccentColor","date","percentOfWaterRate","recordsCount","percentagePerMonth","waterPerDay","dailyWaterRate","Date","todayDate","_useState3","_useState4","currentDate","setCurrentDate","_useState5","getFullYear","_useState6","currentYear","setCurrentYear","monthName","toLocaleString","month","getMonth","getMonthPercentageThunk","_Fragment","onClick","previousMonth","width","height","nextMonth","length","map","Popup","trigger","parseInt","position","on","closeOnDocumentClick","keepTooltipInside","arrow","offsetX","offsetY","PopUpCard","DailyNormaHeader","WaterRateWrapper","WaterRateParagraph","DailyNormaButton","DailyNormaDialog","Dialog","ModalWrapper","ModalCloseBtn","Modalsvg","_templateObject9","ButtonWrapper","_templateObject10","ModalHeader","_templateObject11","FormulaWrapper","_templateObject12","ModalParagraphForGirl","_templateObject13","ModalParagraphForMan","_templateObject14","ModalSpan","_templateObject15","ModalInfo","_templateObject16","ModalForm","_templateObject17","ModalCalc","_templateObject18","GenderWrapper","_templateObject19","ModalLabel","_templateObject20","ModalRadioInputWoman","id","_templateObject21","ModalRadioInputMan","_templateObject22","RadioLabel","_templateObject23","InputWrapper","_templateObject24","ModalInput","_templateObject25","AmountWrapper","_templateObject26","Amount","_templateObject27","ModalButton","_templateObject28","WaterIntakeSpan","_templateObject29","InputWrapperWater","_templateObject30","ModalLabelWater","_templateObject31","_templateObject32","onClose","gender","setGender","weight","setWeight","activityTime","setActivityTime","_useState7","_useState8","requiredWater","setRequiredWater","_useState9","_useState10","waterToDrink","setwaterToDrink","calculateWaterRate","waterCalculated","toFixed","onSubmit","e","preventDefault","updateWaterRateThunk","amountOfWater","checked","htmlFor","event","weightValue","parseFloat","target","isNaN","placeholder","activityTimeValue","required","newWaterRate","DailyNorma","isModalOpen","setIsModalOpen","handleCloseModal","StyledEngineProvider","injectFirst","open","PaperComponent","DailyModal","ModalReverse","OpenButton","Container","ListHeader","Title","CloseButton","ResultContainer","WaterGlass","ResultMl","ResultTime","DataContainer","DataTitle","DataText","DataBtnsContainer","DataBtn","DataResult","LabelTime","LabelMl","InputTime","TextField","MenuItemCustom","MenuItem","InputMl","SaveContainer","SaveResultTxt","SaveBtn","IconBtn","getCurrentTime","hour","getHours","toString","padStart","minutes","getMinutes","formattedHour","roundedMinutes","Math","ceil","formattedMinute","generateHours","hours","i","j","push","onSave","title","isVisible","result","setResult","time","setTime","sprite","select","onBlur","_toConsumableArray","index","newValue","inputValue","localStorage","setItem","waterData","setWaterData","isEditing","setIsEditing","setIsVisible","maxWidth","WaterListModal","handleSaveWaterData","handleOpenModal","List","ListElem","ListElemInfoContainer","ListElemButtonsContainer","Icon","ChangeWaterBtn","DeleteWaterBtn","DeleteBtnIcon","ChangeBtnIcon","_waterData$selectedIt","_waterData$selectedIt2","selectedItemIndex","setSelectedItemIndex","ModalAddEdit","addWaterRateThunk","item","handleEditWaterData","newData","filter","_","handleDeleteWaterData","Background","TodayList","Calendar"],"sourceRoot":""}