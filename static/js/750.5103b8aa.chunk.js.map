{"version":3,"file":"static/js/750.5103b8aa.chunk.js","mappings":"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","sources":["components/AuthForm/AuthFormStyled.js","components/AuthForm/AuthForm.jsx","components/Container/Container.jsx","pages/AuthPages/AuthPagesStyled.js","pages/AuthPages/SignUpPage.jsx"],"sourcesContent":["import styled, { css } from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const StyledForm = styled(Form)`\ndisplay: flex;\nflex-direction: column;\ngap: 16px;\n  }\n  @media screen and (min-width: 768px) {\n  width: 336px;\n  \n  }\n  \n  @media screen and (min-width: 1440px) {\n    width: 384px;\n  }\n  \n`;\nexport const InputWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  position: relative;\n  z-index: 5;\n  @media screen and (min-width: 1440px) {\n  }\n`;\nexport const StaledLabel = styled.label`\n  font-family: 'Roboto', sans-serif;\n  font-size: 18px;\n  line-height: 1.33;\n  color: var(--primary-color-black);\n`;\nexport const StyledField = styled(Field)`\n  border: 1px solid\n    ${props =>\n      props.errors && props.touched === 'true'\n        ? css`var(--secondary-color-red)`\n        : css`var(--secondary-color-blue-3)`};\n  border-radius: 6px;\n  font-family: \"Roboto\"; \n  padding: 12px 10px;\n  width: 280px;\n  height: 44px;\n  font-family: \"Roboto\";\n  color: var(--primary-color-blue);\n  background: var(--primary-color-white);\n  &::placeholder {\n    line-height: 1.25;\n    color: var(--secondary-color-blue-2);\n  }\n  &:focus {\n    border-color: var(--secondary-color-blue-1);\n    outline: none;\n  }\n\n  &:valid {\n    color: var(--primary-color-blue);\n  }\n  &:invalid {\n    color: var(--secondary-color-red);\n    border-color: var(--secondary-color-red);\n  }\n  @media screen and (min-width: 768px) {\n    width: 336px;\n  }\n  @media screen and (min-width: 1440px) {\n    width: 384px;\n  }\n`;\nexport const StyledSpan = styled.span`\n  display: none;\n`;\n\nexport const SvgIcon = styled.svg`\n  fill: transparent;\n  stroke: var(--primary-color-blue);\n  width: 16px;\n  height: 16px;\n  position: absolute;\n  // top: 60%;\n  right: 14px;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  @media screen and (min-width: 768px) {\n    left: 310px;\n  }\n  @media screen and (min-width: 1440px) {\n    left: 355px;\n  }\n`;\n\nexport const StyledErrorMessage = styled(ErrorMessage)`\n  font-size: 12px;\n  font-family: \"Roboto\"; \n  line-height: 1.25;\n  color: var(--secondary-color-red);\n`;\nexport const Button = styled.button`\n \n  font-family: \"Roboto\"; \n  border-radius: 10px;\n  position: relative;\n  z-index: 5;\n  padding: 8px 30px;\n  width: 280px;\n  height: 36px;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.25;\n  text-align: center;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: var(--primary-color-white);\n  background: var(--primary-color-blue);\n  margin-bottom: 16px;\n  &:hover,\n  &:focus {\n    cursor: pointer;\n        box-shadow: 0px 4px 14px 0px rgba(64, 123, 255, 0.54);\n   transition: box-shadow 0.25s cubic-bezier(0.4, 0, 0.2, 1); }\n  @media screen and (min-width: 768px) {\n    padding: 10px 30px;\n    width: 336px;\n    height: 44px;\n    font-size: 18px;\n    line-height: 1.33;\n  }\n  @media screen and (min-width: 1440px) {\n    width: 384px;\n  }\n`;\n\nexport const InputSvgWrapper = styled.div`\n  position: relative;\n`;\n","import React from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  StyledForm,\n  InputWrapper,\n  StaledLabel,\n  StyledField,\n  SvgIcon,\n  StyledErrorMessage,\n  Button,\n  InputSvgWrapper,\n} from './AuthFormStyled';\nimport { useState } from 'react';\nimport { icons } from '../../assets';\nimport { useTranslation } from 'react-i18next';\n\nexport const AuthForm = ({ onSubmit, isSignUp, isForgotPassword, isRecoverPassword }) => {\n  const [lookPassword, setLookPassword] = useState(false);\n  const [lookRepeatPassword, seLookRepeatPassword] = useState(false);\n  const { t } = useTranslation();\n\n  const passwordVisibile = () => {\n    setLookPassword(prevLookPassword => !prevLookPassword);\n  };\n  const passwordRepeatVisibile = () => {\n    seLookRepeatPassword(prevLookPassword => !prevLookPassword);\n  };\n  return (\n    <Formik\n      initialValues={{\n        email: '',\n        password: '',\n        repeatPassword: '',\n      }}\n      validationSchema={Yup.object({\n        email: !isRecoverPassword\n          ? Yup.string()\n            .email('Invalid email address')\n            .required('Email is required')\n          : Yup.string(),\n        password: !isForgotPassword\n          ? Yup.string()\n            .min(8, 'Password must be at least 8 characters')\n            .required('Password is required')\n          : Yup.string(),\n        repeatPassword: isSignUp || isRecoverPassword\n          ? Yup.string()\n            .oneOf([Yup.ref('password'), null], 'Passwords must match')\n            .required('Please repeat your password')\n          : Yup.string(),\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        const { email, password } = values;\n        if (isForgotPassword) {\n          onSubmit({ email });\n        }\n        else if (isRecoverPassword) {\n          onSubmit({ password });\n        } else {\n          onSubmit({ email, password });\n        }\n\n        setSubmitting(false);\n      }}\n    >\n      {({ errors, touched }) => {\n        return (\n          <StyledForm>\n            {!isRecoverPassword && (\n              <InputWrapper>\n                <StaledLabel htmlFor=\"email\">{t('auth_form.email')}</StaledLabel>\n                <StyledField\n                  type=\"email\"\n                  id=\"email\"\n                  name=\"email\"\n                  placeholder=\"E-mail\"\n                  errors={errors ? errors.email : undefined}\n                  touched={touched.email ? 'true' : 'false'}\n                />\n                <StyledErrorMessage name=\"email\" component=\"div\" />\n              </InputWrapper>\n            )}\n\n            {!isForgotPassword && (\n              <InputWrapper>\n                <StaledLabel htmlFor=\"password\">{t('auth_form.password')}</StaledLabel>\n                <InputSvgWrapper>\n                  <StyledField\n                    type={lookPassword ? 'text' : 'password'}\n                    name=\"password\"\n                    placeholder={t('auth_form.password')}\n                    pattern=\".{8,}\"\n                    errors={errors ? errors.password : undefined}\n                    touched={touched.password ? 'true' : 'false'}\n                  />\n                  <SvgIcon type=\"button\" onClick={passwordVisibile}>\n                    {lookPassword\n                      ? 'Hide' && <use href={`${icons}#icon-eye`}></use>\n                      : 'Show' && <use href={`${icons}#icon-eye-slash`}></use>}\n                  </SvgIcon>\n                </InputSvgWrapper>\n\n                <StyledErrorMessage name=\"password\" component=\"div\" />\n              </InputWrapper>\n            )}\n\n            {(isSignUp || isRecoverPassword) && (\n              <InputWrapper>\n                <StaledLabel htmlFor=\"repeatPassword\">\n                {t('auth_form.repeatPassword')}\n                </StaledLabel>\n                <InputSvgWrapper>\n                  <StyledField\n                    type={lookRepeatPassword ? 'text' : 'password'}\n                    name=\"repeatPassword\"\n                    placeholder={t('auth_form.repeatPassword')}\n                    pattern=\".{8,}\"\n                    errors={errors ? errors.repeatPassword : undefined}\n                    touched={touched.repeatPassword ? 'true' : 'false'}\n                  />\n                  <SvgIcon type=\"button\" onClick={passwordRepeatVisibile}>\n                    {lookRepeatPassword\n                      ? 'Hide' && <use href={`${icons}#icon-eye`}></use>\n                      : 'Show' && <use href={`${icons}#icon-eye-slash`}></use>}\n                  </SvgIcon>\n                </InputSvgWrapper>\n\n                <StyledErrorMessage name=\"repeatPassword\" component=\"div\" />\n              </InputWrapper>\n            )}\n\n            <Button type=\"submit\">\n              {isSignUp ? t('signup_page.signup')\n                : isForgotPassword ? t('auth_form.send')\n                  : isRecoverPassword ?  t('auth_form.changePassword')\n                    : t('signin_page.signin')}\n            </Button>\n          </StyledForm>\n        );\n      }}\n    </Formik>\n  );\n};\n","import { WrapperContainer } from './ContainerStyled';\n\nconst Container = ({ children }) => {\n  return <WrapperContainer>{children}</WrapperContainer>;\n};\n\nexport default Container;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const AuthHeder = styled.h2`\n  font-weight: 500;\n  font-family: \"Roboto\";\n  font-size: 26px;\n  line-height: 1, 23;\n  color: var(--primary-color-black);\n  margin-bottom: 16px;\n`;\nexport const PageWrapper = styled.div`\n  padding-top: 24px;\n  width: 100%;\n  @media screen and (min-width: 768px) {\n    padding-top: 40px;\n  }\n  @media screen and (min-width: 1440px) {\n    padding-top: 113px;\n    padding-left: 738px;\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  z-index: 5;\n  font-family: \"Roboto\";\n  position: relative;\n  font-size: 16px;\n  line-height: 1.25;\n  color: var(--primary-color-blue);\n  &:hover,\n  &:focus {\n    cursor: pointer;\n    color: var(--secondary-color-orange);\n   transition: box-shadow 0.25s cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`;\n\nexport const LinkWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 280px;\n  @media screen and (min-width: 768px) {\n    width: 336px;\n  }\n  @media screen and (min-width: 1440px) {\n    width: 384px;\n  }\n`;\n\nexport const Button = styled.button`\n  font-family: \"Roboto\";\n  border-radius: 10px;\n  position: relative;\n  z-index: 5;\n  padding: 8px 30px;\n  width: 280px;\n  height: 36px;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.25;\n  text-align: center;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: var(--primary-color-white);\n  background: var(--primary-color-blue);\n  margin-bottom: 16px;\n  &:hover,\n  &:focus {\n    cursor: pointer;\n        box-shadow: 0px 4px 14px 0px rgba(64, 123, 255, 0.54);\n   transition: box-shadow 0.25s cubic-bezier(0.4, 0, 0.2, 1); }\n  @media screen and (min-width: 768px) {\n    padding: 10px 30px;\n    width: 336px;\n    height: 44px;\n    font-size: 18px;\n    line-height: 1.33;\n  }\n  @media screen and (min-width: 1440px) {\n    width: 384px;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { AuthForm } from 'components/AuthForm/AuthForm';\nimport { signupUser } from '../../redux/auth/operations';\nimport Container from 'components/Container/Container';\nimport { PageWrapper, AuthHeder, StyledLink } from './AuthPagesStyled.js';\nimport Background from 'components/Background/Background';\nimport { successToast, errorToast } from '../../services/services';\nimport { useTranslation } from 'react-i18next';\n\nconst SignUpPage = () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  const handleSubmit = formData => {\n    dispatch(signupUser(formData))\n      .unwrap()\n      .then(() => {\n        successToast('Registration Successful');\n      })\n      .catch(error => {\n        errorToast(error);\n      });\n  };\n\n  return (\n    <div>\n      <Background />\n      <Container>\n        <PageWrapper>\n          <AuthHeder>{t('signup_page.signup')}</AuthHeder>\n          <AuthForm onSubmit={handleSubmit} isSignUp={true} />\n          <StyledLink to=\"/signin\">{t('signup_page.signin')}</StyledLink>\n        </PageWrapper>\n      </Container>\n    </div>\n  );\n};\n\nexport default SignUpPage;\n"],"names":["StyledForm","styled","Form","_templateObject","_taggedTemplateLiteral","InputWrapper","_templateObject2","StaledLabel","_templateObject3","StyledField","Field","_templateObject4","props","errors","touched","css","_templateObject5","_templateObject6","SvgIcon","_templateObject7","_templateObject8","StyledErrorMessage","ErrorMessage","_templateObject9","Button","_templateObject10","InputSvgWrapper","_templateObject11","AuthForm","_ref","onSubmit","isSignUp","isForgotPassword","isRecoverPassword","_useState","useState","_useState2","_slicedToArray","lookPassword","setLookPassword","_useState3","_useState4","lookRepeatPassword","seLookRepeatPassword","t","useTranslation","passwordVisibile","prevLookPassword","passwordRepeatVisibile","_jsx","Formik","initialValues","email","password","repeatPassword","validationSchema","Yup","required","min","oneOf","values","_ref2","setSubmitting","children","_ref3","_jsxs","htmlFor","type","id","name","placeholder","undefined","component","pattern","onClick","href","concat","icons","WrapperContainer","AuthHeder","PageWrapper","StyledLink","Link","LinkWrapper","dispatch","useDispatch","Background","Container","formData","signupUser","unwrap","then","successToast","catch","error","errorToast","to"],"sourceRoot":""}