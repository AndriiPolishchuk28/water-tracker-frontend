{"version":3,"file":"static/js/348.edb5fcfe.chunk.js","mappings":"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","sources":["components/Container/Container.jsx","components/WaterTracker/WaterTracker.styled.jsx","redux/water/selectors.js","components/WaterListModal/WaterListModal.styled.jsx","utils/timeUtils.js","components/WaterListModal/WaterListModal.jsx","components/WaterTracker/WaterTrackerModal.jsx","components/WaterTracker/WaterTracker.jsx","pages/HomePage/HomePageStyled.js","components/Calendar/Calendar.styled.js","components/Calendar/PopUp/PopUp.styled.js","components/Calendar/PopUp/PopUp.jsx","components/Calendar/Calendar.jsx","components/DailyNorma/DailyNormaStyled.js","components/DailyNorma/DailyModal/DailyModal.jsx","components/DailyNorma/DailyNorma.jsx","components/ModalWL/ModalWL.styled.jsx","components/ModalWL/ModalAddEdit.jsx","components/TodayList/TodayList.styled.jsx","components/TodayList/TodayList.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["import { WrapperContainer } from './ContainerStyled';\n\nconst Container = ({ children }) => {\n  return <WrapperContainer>{children}</WrapperContainer>;\n};\n\nexport default Container;\n","import styled from 'styled-components';\n\nexport const ProgressPanelContainer = styled.div`\n  max-width: 280px;\n  margin-bottom: 40px;\n\n  @media screen and (min-width: 768px) {\n    max-width: 704px;\n    display: flex;\n    align-items: center;\n  }\n  @media only screen and (min-width: 1440px) {\n    max-width: 592px;\n    height: 90px;\n  }\n`;\n\nexport const TodayTitle = styled.h3`\n  margin-bottom: 8px;\n  align-self: baseline;\n  color: var(--primary-color-blue);\n  font-size: 18px;\n  font-weight: 400;\n  line-height: 1.33;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 16px;\n  }\n`;\n\nexport const ProgressContainer = styled.div`\n  margin-bottom: 16px;\n  width: 280px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  @media screen and (min-width: 768px) {\n    width: 356px;\n    height: 90px;\n    margin-right: 12px;\n    margin-bottom: 0;\n  }\n  @media only screen and (min-width: 1440px) {\n    width: 391px;\n    margin-right: 23px;\n  }\n`;\n\nexport const ProgressInput = styled.input`\n  -webkit-appearance: none;\n  appearance: none;\n  width: 256px;\n  border-radius: 30px;\n  margin-bottom: 6px;\n  outline: none;\n\n  background: var(--secondary-color-blue-3);\n  background-image: linear-gradient(\n    var(--secondary-color-blue-2),\n    var(--secondary-color-blue-2)\n  );\n\n  background-repeat: no-repeat;\n\n  &::-webkit-slider-thumb {\n    -webkit-appearance: none;\n    appearance: none;\n    height: 14px;\n    width: 14px;\n    margin-top: -3px;\n\n    border-radius: 50%;\n    background-color: var(--primary-color-white);\n    border: 1px solid var(--primary-color-blue);\n  }\n\n  &::-webkit-slider-runnable-track {\n    height: 8px;\n    border-radius: 30px;\n    background: var(--secondary-color-blue-2);\n    -webkit-appearance: none;\n    box-shadow: none;\n    border: none;\n    background: transparent;\n  }\n\n  &::-webkit-slider-thumb:hover {\n    background: var(--primary-color-white);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 325px;\n  }\n  @media only screen and (min-width: 1440px) {\n    width: 360px;\n  }\n`;\n\nexport const ProgressMarks = styled.div`\n  width: 256px;\n  margin-bottom: 4px;\n  display: flex;\n  justify-content: space-between;\n  & span {\n    font-size: 8px;\n    color: #d7e3ff;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 325px;\n    margin-bottom: 8px;\n  }\n  @media only screen and (min-width: 1440px) {\n    width: 360px;\n    margin-bottom: 4px;\n  }\n`;\n\nexport const ProgressPercents = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  & span {\n    font-family: Roboto, sans-serif;\n    color: var(--Primery-Color-Blue, #407bff);\n    text-align: center;\n    font-size: 12px;\n    line-height: 1.33;\n    width: 30px;\n  }\n\n  & span:nth-child(2) {\n    font-size: 16px;\n    font-weight: 500;\n    line-height: 1.25;\n  }\n`;\n\nexport const AddWaterBtn = styled.button`\n  width: 100%;\n  height: 36px;\n  font-family: Roboto, sans-serif;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n\n  border: none;\n  border-radius: 10px;\n  background: var(--primary-color-blue);\n  box-shadow: 0px 4px 8px 0px rgba(64, 123, 255, 0.34);\n\n  transition: box-shadow 0.25s cubic-bezier(0.4, 0, 0.2, 1);\n\n  & span {\n    font-size: 16px;\n    color: var(--primary-color-white);\n    line-height: 1.25;\n  }\n\n  &:hover {\n    box-shadow: 0px 4px 14px 0px rgba(64, 123, 255, 0.54);\n    cursor: pointer;\n  }\n\n  &:active {\n    box-shadow: 0 0;\n  }\n\n  & svg {\n    width: 24px;\n    height: 24px;\n    stroke: var(--primary-color-white);\n    fill: var(--primary-color-blue);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 336px;\n    height: 44px;\n    & span {\n      font-size: 18px;\n    }\n  }\n  @media only screen and (min-width: 1440px) {\n    width: 178px;\n  }\n`;\n\nexport const SvgPlus = styled.svg`\n  stroke: var(--primary-color-white);\n`;\n","export const selectMonthPercentage = state => state.water.itemsPerMonth;\nexport const selectWaterRate = state => state.auth.user.waterRate;\nexport const selectListWaterOfDay = state => state.water.listWaterOfDay;\nexport const selectDayPercentage = state => state.water.percentOfDailyNorm;\n","import styled from 'styled-components';\nimport { TextField, MenuItem } from '@mui/material';\n\nexport const OpenButton = styled.button`\n  width: 280px;\n  height: 36px;\n  padding: 6px 76px 6px 76px;\n  border-radius: 10px 0px 0px 0px;\n  opacity: 0px;\n  background-color: #407bff;\n`;\n\nexport const Container = styled.div`\n  position: relative;\n  max-height: 100%;\n  padding: 24px 12px;\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n  border-radius: 10px;\n  @media only screen and (min-width: 768px) {\n    padding: 32px 24px;\n    width: 704px;\n    height: 100%;\n  }\n  @media only screen and (min-width: 1440px) {\n    width: 592px;\n  }\n`;\n\nexport const ListHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 50px;\n`;\nexport const Title = styled.h2`\n  font-family: Roboto;\n  font-size: 26px;\n  font-weight: 500;\n  line-height: 32px;\n`;\nexport const CloseButton = styled.button`\n  width: 24px;\n  height: 24px;\n  cursor: pointer;\n`;\nexport const ResultContainer = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 16px;\n  width: 100%;\n  height: 52px;\n  background-color: var(--secondary-color-blue-1);\n  border-radius: 10px;\n  padding: 8px 24px;\n\n  @media only screen and (min-width: 768px) {\n    width: 256px;\n    height: 52px;\n    padding: 8px 24px;\n  }\n`;\nexport const WaterGlass = styled.svg`\n  width: 24px;\n  height: 24px;\n  fill: var(--primary-color-blue);\n`;\nexport const ResultMl = styled.span`\n  display: block;\n  font-family: Roboto;\n  font-size: 18px;\n  font-weight: 400;\n  line-height: 24px;\n  color: var(--primary-color-blue);\n`;\nexport const ResultTime = styled.span`\n  display: block;\n  font-family: Roboto;\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 24px;\n  color: #2f2f2f;\n`;\nexport const DataContainer = styled.div`\n  width: 194px;\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\nexport const DataTitle = styled.h3`\n  font-family: Roboto;\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 20px;\n  color: var(--primary-color-black);\n`;\nexport const DataText = styled.p`\n  font-family: Roboto;\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 20px;\n  color: #2f2f2f;\n`;\nexport const DataBtnsContainer = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 6px;\n`;\nexport const DataBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 44px;\n  height: 44px;\n  border-radius: 50%;\n  border: 1px solid #9ebbff;\n  cursor: pointer;\n  color: var(--secondary-color-blue-2)\n  background-color: transparent;\n  padding: 0;\n  &:hover {\n    box-shadow: 0px 2px 4px 0px #407bff33;\n  }\n`;\nexport const DataResult = styled.p`\n  width: 92px;\n  height: 36px;\n  padding: 6px 10px 6px 10px;\n  border-radius: 40px;\n  background-color: #d7e3ff;\n  color: #407bff;\n  font-family: Roboto;\n  font-size: 18px;\n  font-weight: 700;\n  line-height: 24px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nexport const LabelTime = styled.label`\n  font-family: Roboto;\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 20px;\n  color: #2f2f2f;\n`;\nexport const LabelMl = styled.label`\n  font-family: Roboto;\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 20px;\n  color: #2f2f2f;\n`;\n// export const InputTime = styled(TextField)`\n// '.MuiSelect-select-MuiInputBase-input-MuiOutlinedInput-input: {\n//   border: '1px solid red',\n// },\n//   width: 100%;\n//   height: 44px;\n//   padding: 12px 10px;\n//   border-radius: 6px;\n//   border: 1px solid #d7e3ff;\n//   color: #407bff;\n//   outline: none;\n\n//   @media only screen and (min-width: 768px) {\n//     width: 544px;\n//   }\n//   @media only screen and (min-width: 1440px) {\n//     width: 100%;\n//   }\n// `;\nexport const InputTime = styled(TextField)`\n  & .MuiOutlinedInput-root fieldset {\n    outline: none;\n    border: none;\n  }\n  & .MuiOutlinedInput-root {\n    width: 100%;\n    height: 44px;\n    padding: 12px 10px;\n    border-radius: 6px;\n    border: 1px solid var(--secondary-color-blue-3);\n    color: #407bff;\n    &:hover fieldset {\n      border: none;\n    }\n  }\n`;\n\nexport const MenuItemCustom = styled(MenuItem)`\n  width: 100%;\n  height: 44px;\n  padding: 12px 10px;\n  border-radius: 6px;\n  border: 1px solid #d7e3ff;\n  color: #407bff;\n  outline: none;\n\n  @media only screen and (min-width: 768px) {\n    width: 544px;\n  }\n  @media only screen and (min-width: 1440px) {\n    width: 100%;\n  }\n`;\n\nexport const InputMl = styled.input`\n  width: 100%;\n  height: 44px;\n  padding: 12px 10px;\n  border-radius: 6px;\n  border: 1px solid #d7e3ff;\n  color: #407bff;\n  outline: none;\n  @media only screen and (min-width: 1440px) {\n    width: 100%;\n  }\n`;\nexport const SaveContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 16px;\n\n  @media only screen and (min-width: 768px) {\n    flex-direction: row;\n    justify-content: end;\n    gap: 10px;\n  }\n`;\nexport const SaveResultTxt = styled.p`\n  font-family: Roboto;\n  font-size: 18px;\n  font-weight: 700;\n  line-height: 24px;\n  text-align: center;\n  color: var(--primary-color-blue);\n\n  @media only screen and (min-width: 768px) {\n    width: 72px;\n  }\n`;\nexport const SaveBtn = styled.button`\n  width: 100%;\n  padding: 8px 30px;\n  border-radius: 10px;\n  background-color: var(--primary-color-blue);\n  color: #fff;\n  font-family: Roboto;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 20px;\n  cursor: pointer;\n  &:hover {\n    box-shadow: 0px 4px 8px 0px #407bff57;\n  }\n  @media only screen and (min-width: 768px) {\n    width: 166px;\n  }\n`;\nexport const IconBtn = styled.svg`\n  width: 24px;\n  height: 24px;\n  fill: var(--secondary-color-blue-2);\n  stroke: var(--secondary-color-blue-2);\n`;\n","export const getCurrentTime = () => {\n    const currentDate = new Date()\n    let hour = currentDate.getHours().toString().padStart(2, '0')\n    const minutes = currentDate.getMinutes();\n    const formattedHour = hour.toString().padStart(2, '0');\n    // const formattedMinute = Math.ceil(minutes / 5) * 5 .toString().padStart(2, '0');\n    const roundedMinutes = Math.ceil(minutes / 5) * 5;\n    const formattedMinute = roundedMinutes < 10 ? '0' + roundedMinutes : roundedMinutes;\n    return `${formattedHour}:${formattedMinute}`;\n}\n\nexport const generateHours = () => {\n    const hours = [];\n    for (let i = 0; i < 24; i++) {\n        for (let j = 0; j < 60; j += 5) {\n            const hour = i;\n            const formattedHour = `${hour.toString().padStart(2, '0')}:${j.toString().padStart(2, '0')}`;\n            hours.push(formattedHour);\n        }\n    }\n    return hours;\n};","import React, { useState } from 'react';\nimport {\n  Container,\n  ListHeader,\n  Title,\n  CloseButton,\n  ResultContainer,\n  WaterGlass,\n  ResultMl,\n  ResultTime,\n  DataBtnsContainer,\n  DataTitle,\n  DataResult,\n  DataText,\n  DataContainer,\n  DataBtn,\n  LabelMl,\n  LabelTime,\n  InputMl,\n  InputTime,\n  SaveContainer,\n  SaveResultTxt,\n  SaveBtn,\n  IconBtn,\n  MenuItemCustom,\n} from './WaterListModal.styled';\nimport { icons } from '../../assets';\nimport { getCurrentTime, generateHours } from 'utils/timeUtils';\n\nconst WaterListModal = ({\n  onSave,\n  onClose,\n  title,\n  isVisible,\n  initialWater = 50,\n  initialTime = getCurrentTime(),\n}) => {\n  const [result, setResult] = useState(initialWater);\n  const [time, setTime] = useState(initialTime);\n\n  const handleChange = event => {\n    const inputValue = event.target.value;\n    let newValue;\n    if (inputValue === '') {\n      newValue = 0;\n    } else {\n      newValue = parseInt(inputValue, 10);\n    }\n    setResult(newValue);\n  };\n\n  const handleTimeChange = event => {\n    setTime(event.target.value);\n  };\n\n  const increment = () => {\n    const value = result + 50;\n    setResult(value);\n  };\n  const decrement = () => {\n    const value = result - 50;\n    if (value >= 0) {\n      setResult(value);\n    } else {\n      setResult(0);\n    }\n  };\n\n  const handleBlur = event => {\n    setTime(event.target.value);\n  };\n  const handleSave = () => {\n    onSave(result, time);\n    localStorage.setItem('savedResult', result);\n    localStorage.setItem('savedTime', time);\n  };\n\n  return (\n    <Container>\n      <ListHeader>\n        <Title>{title}</Title>\n        <CloseButton onClick={onClose}>\n          <IconBtn>\n            <use href={`${icons}#icon-close-x`} />\n          </IconBtn>\n        </CloseButton>\n      </ListHeader>\n      {isVisible && (\n        <ResultContainer>\n          <WaterGlass>\n            <use href={`${icons}#icon-glass`} />\n          </WaterGlass>\n          <ResultMl>{`${result}ml`}</ResultMl>\n          <ResultTime>{time}</ResultTime>\n        </ResultContainer>\n      )}\n      <DataContainer>\n        <DataTitle>Correct entered data:</DataTitle>\n        <DataText>Amount of water:</DataText>\n        <DataBtnsContainer>\n          <DataBtn onClick={decrement}>\n            <IconBtn>\n              <use href={`${icons}#icon-minus-small`} />\n            </IconBtn>\n          </DataBtn>\n          <DataResult>{`${result}ml`}</DataResult>\n          <DataBtn onClick={increment}>\n            <IconBtn>\n              <use href={`${icons}#icon-plus-small`} />\n            </IconBtn>\n          </DataBtn>\n        </DataBtnsContainer>\n      </DataContainer>\n      <LabelTime>Recording time:</LabelTime>\n      <InputTime\n        select\n        value={time}\n        onBlur={handleBlur}\n        onChange={handleTimeChange}\n      >\n        {[getCurrentTime(), ...generateHours()].map((hour, index) => (\n          <MenuItemCustom key={index} value={hour}>\n            {hour}\n          </MenuItemCustom>\n        ))}\n      </InputTime>\n      <LabelMl>Enter the value of the water used:</LabelMl>\n      <InputMl value={result} onChange={handleChange} />\n      <SaveContainer>\n        <SaveResultTxt>{`${result}ml`}</SaveResultTxt>\n        <SaveBtn onClick={handleSave}>Save</SaveBtn>\n      </SaveContainer>\n    </Container>\n  );\n};\nexport default WaterListModal;\n","import React, { useState } from 'react';\nimport Dialog from '@mui/material/Dialog';\nimport { AddWaterBtn } from './WaterTracker.styled';\nimport WaterListModal from 'components/WaterListModal/WaterListModal';\nimport { icons } from '../../assets/';\n\nconst ModalAdd = ({ onSave }) => {\n  const [waterData, setWaterData] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  const [isVisible, setIsVisible] = useState(true);\n\n  const handleSaveWaterData = (result, time) => {\n    setWaterData([...waterData, { result, time }]);\n  };\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n  };\n\n  const handleOpenModal = (isEditing) => {\n    setIsModalOpen(true);\n    setIsEditing(isEditing);\n    setIsVisible(!isEditing); \n  };\n\n  return (\n    <>\n      <Dialog open={isModalOpen} onClose={handleCloseModal} maxWidth=\"800px\">\n        <WaterListModal\n          onSave={(result, time) => {\n            handleSaveWaterData(result, time);\n            onSave(result, time);\n            handleCloseModal();\n          }}\n          onClose={handleCloseModal}\n          title={isEditing ? \"Edit the entered amount of water\" : \"Add water\"}\n          isVisible={!isVisible}\n        />\n      </Dialog>\n      {/* <OpenButton onClick={() => handleOpenModal(false)}>Add water</OpenButton> */}\n      <AddWaterBtn onClick={() => handleOpenModal(false)}>\n        <svg>\n          <use href={`${icons}#icon-plus-circle`}></use>\n        </svg>\n        <span>Add water</span>\n      </AddWaterBtn>\n    </>\n  );\n};\n\nexport default ModalAdd;","// import { openAddWater } from 'redux/modals/modalsSlice';\n// import { icons } from '../../assets/';\nimport {\n  // AddWaterBtn,\n  ProgressContainer,\n  ProgressInput,\n  ProgressMarks,\n  ProgressPanelContainer,\n  ProgressPercents,\n  TodayTitle,\n} from './WaterTracker.styled';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport {\n  selectWaterRate,\n  selectListWaterOfDay,\n} from '../../redux/water/selectors';\nimport { useEffect, useState } from 'react';\nimport { getWaterPerDayThunk } from '../../redux/water/operations';\nimport ModalAdd from './WaterTrackerModal';\nimport { addWaterRateThunk } from '../../redux/water/operations';\n\nexport const WaterTracker = () => {\n  const dispatch = useDispatch();\n  const [percentages, setPercentages] = useState(null);\n\n  const todayNorma = useSelector(selectWaterRate); // 2\n  const todayData = useSelector(selectListWaterOfDay);\n\n  useEffect(() => {\n    dispatch(getWaterPerDayThunk());\n  }, [dispatch]);\n\n  useEffect(() => {\n    const todayValue = todayData.reduce((acc, water) => acc + water.value, 0);\n    setPercentages((todayValue / (todayNorma * 1000)) * 100);\n  }, [todayData, todayNorma]);\n\n  const handleSaveWaterData = (result, time) => {\n    // const newData = [...waterData, { result, time }];\n    // console.log(newData);\n    // setWaterData(newData);\n    dispatch(addWaterRateThunk({ value: result, time }));\n  };\n\n  return (\n    <ProgressPanelContainer>\n      <ProgressContainer>\n        <TodayTitle>Today</TodayTitle>\n        <ProgressInput\n          style={{ backgroundSize: `${percentages}% 100%` }}\n          onChange={() => {}}\n          type=\"range\"\n          value={`${percentages}`}\n          min=\"0\"\n          max=\"100\"\n          step=\"1\"\n        />\n        <ProgressMarks>\n          <span>|</span>\n          <span>|</span>\n          <span>|</span>\n        </ProgressMarks>\n        <ProgressPercents>\n          <span>0%</span>\n          <span>50%</span>\n          <span>100%</span>\n        </ProgressPercents>\n      </ProgressContainer>\n      <ModalAdd onSave={handleSaveWaterData} open={false}/>\n      {/* <AddWaterBtn>\n        <svg>\n          <use href={`${icons}#icon-plus-circle`}></use>\n        </svg>\n        <span>Add water</span>\n      </AddWaterBtn> */}\n    </ProgressPanelContainer>\n  );\n};\n// onClick={() => dispatch(openAddWater())}\n","import styled from 'styled-components';\nimport backgroundImage from '../../assets/images/bottleImage.png';\n\nexport const HomePageWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 40px;\n  margin: 0 auto;\n  padding-top: 24px;\n  padding-bottom: 40px;\n\n  @media screen and (min-width: 768px) {\n    padding-top: 40px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    max-width: 1440px;\n\n    padding: 20px 0 40px;\n    display: flex;\n    flex-direction: row;\n    gap: 32px;\n  }\n`;\n\nexport const DailyNormaWrapper = styled.div`\n  width: 100%;\n  height: 440px;\n  background-image: url(${backgroundImage});\n  background-position: 50% 35%;\n  background-repeat: no-repeat;\n  background-size: 280px 208px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  @media screen and (min-width: 768px) {\n    background-size: 518px 386px;\n    height: 508px;\n    background-position: 50% 0;\n  }\n\n  @media screen and (min-width: 1440px) {\n    background-size: 738px 548px;\n    width: 592px;\n    padding: 30px 0 16px 0;\n    background-position: 50% 0;\n    height: 680px;\n    justify-content: space-between;\n  }\n`;\n\nexport const MyDailyNorma = styled.div`\n  box-shadow: 0px 4px 8px 0px RGBA(158, 187, 255, 0.12);\n  border: 1px solid var(--secondary-color-blue-1);\n  width: 164px;\n  height: 74px;\n  padding: 8px 20px;\n  border-radius: 10px;\n  @media screen and (min-width: 768px) {\n    width: 164px;\n    height: 76px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding: 8px 20px;\n    border-radius: 10px;\n  }\n`;\n\nexport const MyDailyTracker = styled.div`\n  width: 100%;\n  height: 134px;\n\n  @media screen and (min-width: 1440px) {\n    width: 100%;\n    height: 90px;\n  }\n`;\n\nexport const TodayMonthWrapper = styled.div`\n  box-shadow: 0px 4px 14px 0px RGBA(64, 123, 255, 0.3);\n  border-radius: 10px;\n  width: 100%;\n  padding: 24px 8px;\n  background-color: var(--secondary-color-blue-1);\n  height: 836px;\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n  @media screen and (min-width: 768px) {\n    max-width: 704px;\n    max-height: 688px;\n    padding: 32px 24px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    max-width: 592px;\n    max-height: 680px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const TitleWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  user-select: none;\n`;\n\nexport const MonthText = styled.h3`\n  font-weight: 500;\n  font-size: 24px;\n  line-height: 1.25;\n  color: var(--primary-color-black);\n  @media screen and (min-width: 768px) {\n    font-size: 26px;\n  }\n`;\n\nexport const SvgIcon = styled.svg`\n  fill: var(--primary-color-blue);\n  cursor: pointer;\n`;\n\nexport const MonthYearText = styled.span`\n  font-family: 'Roboto', sans-serif;\n  padding: 0 16px;\n  font-size: 16px;\n  line-height: 1.25;\n  color: var(--primary-color-blue);\n  width: 153px;\n  display: inline-block;\n  text-align: center;\n`;\n\nexport const Ul = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px 26px;\n  margin-top: 16px;\n  position: relative;\n  @media screen and (min-width: 768px) {\n    gap: 20px 34px;\n  }\n  @media screen and (min-width: 1440px) {\n    gap: 20px 22px;\n  }\n`;\n\nexport const LiItem = styled.li`\n  cursor: pointer;\n  @media screen and (min-width: 768px) {\n    position: relative;\n  }\n  @media screen and (min-width: 1440px) {\n    position: relative;\n  }\n`;\nexport const LiCircle = styled.div`\n  border: 1px solid\n    ${props =>\n      props.$percentage < 100\n        ? `${'var(--secondary-color-orange)'}`\n        : 'transperent'};\n  width: 32px;\n  height: 32px;\n  border-radius: 20px;\n  background-color: var(--primary-color-white);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1.28571;\n  color: var(--primary-color-black);\n  @media screen and (min-width: 768px) {\n    width: 34px;\n    height: 34px;\n  }\n`;\n\nexport const ProcentageWater = styled.p`\n  font-family: 'Roboto', sans-serif;\n  font-size: 10px;\n  line-height: 1.6;\n  color: var(--primary-color-blue);\n  text-align: center;\n  margin-top: 4px;\n`;\n\nexport const CalendarWrapper = styled.div`\n  min-height: 506px;\n  @media screen and (min-width: 768px) {\n    min-height: 340px;\n  }\n  @media screen and (min-width: 1140px) {\n    min-height: 332px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const PopUpWrap = styled.div`\n  width: 280px;\n  padding: 24px 13px;\n  background-color: var(--primary-color-white);\n  border-radius: 10px;\n  box-shadow: 0 4px 4px 0 rgba(64, 123, 255, 0.3);\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  z-index: 10;\n  @media screen and (min-width: 768px) {\n    width: 292px;\n  }\n`;\n\nexport const DateText = styled.p`\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 1.25;\n  color: var(--primary-color-blue);\n`;\n\nexport const WaterInfo = styled.p`\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 1.25;\n  color: var(--primary-color-black);\n`;\n\nexport const AccentColor = styled.span`\n  font-family: 'Roboto', sans-serif;\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 1.3;\n  color: var(--primary-color-blue);\n`;\n","import { PopUpWrap, DateText, WaterInfo, AccentColor } from './PopUp.styled';\n\nconst PopUpCard = ({ waterRate, date, percentOfWaterRate, recordsCount }) => {\n  return (\n    <PopUpWrap>\n      <DateText>{date}</DateText>\n      <WaterInfo>\n        Daily norma: <AccentColor>{waterRate ? waterRate : 0} L</AccentColor>\n      </WaterInfo>\n      <WaterInfo>\n        Fulfillment of the daily norm:{' '}\n        <AccentColor>\n          {percentOfWaterRate ? percentOfWaterRate : 0}%\n        </AccentColor>\n      </WaterInfo>\n      <WaterInfo>\n        How many servings of water: <AccentColor>{recordsCount}</AccentColor>\n      </WaterInfo>\n    </PopUpWrap>\n  );\n};\n\nexport default PopUpCard;\n","import { useEffect, useState } from 'react';\nimport {\n  TitleWrapper,\n  MonthText,\n  SvgIcon,\n  MonthYearText,\n  LiItem,\n  LiCircle,\n  Ul,\n  ProcentageWater,\n  CalendarWrapper,\n} from './Calendar.styled';\nimport PopUpCard from './PopUp/PopUp';\nimport Popup from 'reactjs-popup';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { icons } from '../../assets';\nimport { getMonthPercentageThunk } from '../../redux/water/operations';\nimport {\n  selectListWaterOfDay,\n  selectMonthPercentage,\n  selectWaterRate,\n} from '../../redux/water/selectors';\n\nconst Calendar = () => {\n  const dispatch = useDispatch();\n  const percentagePerMonth = useSelector(selectMonthPercentage);\n  const waterPerDay = useSelector(selectListWaterOfDay);\n  const dailyWaterRate = useSelector(selectWaterRate);\n\n  const [todayDate] = useState(new Date());\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [currentYear, setCurrentYear] = useState(new Date().getFullYear());\n  const monthName = currentDate.toLocaleString('en-US', { month: 'long' });\n  const month = currentDate.getMonth() + 1;\n\n  useEffect(() => {\n    if (waterPerDay.length === 0) return;\n    dispatch(getMonthPercentageThunk(`${currentYear}-${month}`));\n  }, [month, currentYear, dispatch, waterPerDay, dailyWaterRate]);\n\n  const goToPreviousMonth = () => {\n    const previousMonth = new Date(\n      currentDate.getFullYear(),\n      currentDate.getMonth() - 1\n    );\n    setCurrentDate(previousMonth);\n    if (currentDate.getMonth() === 0) {\n      setCurrentYear(currentYear - 1);\n    }\n  };\n\n  const goToNextMonth = () => {\n    if (currentDate.getMonth() === 11) {\n      setCurrentYear(currentYear + 1);\n    }\n    const nextMonth = new Date(\n      currentDate.getFullYear(),\n      currentDate.getMonth() + 1\n    );\n    if (\n      currentDate.getFullYear() < todayDate.getFullYear() ||\n      (currentDate.getFullYear() === todayDate.getFullYear() &&\n        currentDate.getMonth() < todayDate.getMonth())\n    ) {\n      setCurrentDate(nextMonth);\n    }\n  };\n\n  return (\n    <CalendarWrapper>\n      <TitleWrapper>\n        <MonthText>Month</MonthText>\n        <div>\n          <SvgIcon onClick={goToPreviousMonth} width={6} height={10}>\n            <use href={`${icons}#icon-chevron-left`}></use>\n          </SvgIcon>\n          <MonthYearText>\n            {monthName}, {currentYear}\n          </MonthYearText>\n          <SvgIcon onClick={goToNextMonth} width={6} height={10}>\n            <use href={`${icons}#icon-chevron-right`}></use>\n          </SvgIcon>\n        </div>\n      </TitleWrapper>\n      <Ul>\n        {percentagePerMonth.length > 0 &&\n          percentagePerMonth.map(\n            ({ waterRate, date, percentOfWaterRate, recordsCount }) => {\n              return (\n                <Popup\n                  style={{ width: '280px' }}\n                  key={date}\n                  trigger={\n                    <LiItem>\n                      <LiCircle $percentage={percentOfWaterRate}>\n                        {parseInt(date)}\n                      </LiCircle>\n                      <ProcentageWater>\n                        {percentOfWaterRate ? percentOfWaterRate : 0}%\n                      </ProcentageWater>\n                    </LiItem>\n                  }\n                  position={[\n                    'top left',\n                    'top right',\n                    'center center',\n                    'right center',\n                  ]}\n                  on=\"click\"\n                  closeOnDocumentClick\n                  keepTooltipInside={true}\n                  arrow={false}\n                  offsetX={8}\n                  offsetY={8}\n                >\n                  <PopUpCard\n                    date={date}\n                    waterRate={waterRate}\n                    percentOfWaterRate={percentOfWaterRate}\n                    recordsCount={recordsCount}\n                  />\n                </Popup>\n              );\n            }\n          )}\n      </Ul>\n    </CalendarWrapper>\n  );\n};\n\nexport default Calendar;\n","import styled from 'styled-components';\nimport Dialog from '@mui/material/Dialog';\n\nexport const DailyNormaWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 12px;\n`;\nexport const DailyNormaHeader = styled.h4`\n  font-family: 'Roboto';\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 1.33;\n  color: $primary-color-black;\n  text-align: center;\n  white-space: nowrap;\n`;\n\nexport const WaterRateWrapper = styled.div`\n  display: flex;\n  gap: 12px;\n`;\nexport const WaterRateParagraph = styled.p`\n  font-family: 'Roboto';\n  font-weight: 700;\n  font-size: 22px;\n  line-height: 1;\n  color: var(--primary-color-blue);\n  @media screen and (min-width: 768px) {\n    font-size: 24px;\n  }\n  @media screen and (min-width: 1440px) {\n  }\n`;\nexport const DailyNormaButton = styled.button`\nfont-family: \"Roboto\"; \nfont-size: 16px;\nline-height: 1.25;\ncolor: #8baeff;\nbackground-color: transparent;\nborder: none;\n&:hover {\n    cursor: pointer;\n    color: var(--secondary-color-orange);\n   transition: box-shadow 0.25s cubic-bezier(0.4, 0, 0.2, 1); \n  }\n}\n`;\nexport const DailyNormaDialog = styled(Dialog)`\n  width: 100%;\n  height: 100%;\n  overflow: auto;\n`;\n\nexport const ModalWrapper = styled.div`\n  border-radius: 10px;\n  padding: 24px 12px;\n  width: 280px;\n  height: 816px;\n  margin: 40px auto 0px auto;\n  position: absolute;\n  top: 0px;\n  background-color: var(--primary-color-white);\n  @media screen and (min-width: 768px) {\n    padding: 32px 24px;\n    margin: 40px 32px auto 32px;\n    width: 704px;\n    height: 696px;\n  }\n  @media screen and (min-width: 1440px) {\n    width: 592px;\n    height: 712px;\n\n    margin: 44px auto;\n  }\n`;\n\nexport const ModalCloseBtn = styled.button``;\nexport const Modalsvg = styled.svg`\n  width: 24px;\n  height: 24px;\n  fill: transparent;\n  stroke: var(--primary-color-blue);\n  &:hover,\n  &:focus {\n    cursor: pointer;\n    stroke: var(--secondary-color-orange);\n   transition: box-shadow 0.25s cubic-bezier(0.4, 0, 0.2, 1); \n`;\n\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 24px;\n`;\n\nexport const ModalHeader = styled.h3`\n  font-weight: 500;\n  font-family: 'Roboto';\n  font-size: 26px;\n  line-height: 1.23;\n  color: var(--primary-color-black);\n`;\n\nexport const FormulaWrapper = styled.div`\n  @media screen and (min-width: 768px) {\n    display: flex;\n    gap: 24px;\n  }\n`;\nexport const ModalParagraphForGirl = styled.p`\n    font-size: 16px;\n    font-family: \"Roboto\"; \nline-height: 1.25;\nmargin-bottom: 16px;\ncolor: var(--primary-color-black);\n}`;\n\nexport const ModalParagraphForMan = styled.p`\n  font-size: 16px;\n  font-family: 'Roboto';\n  line-height: 1.25;\n  margin-bottom: 12px;\n  color: var(--primary-color-black);\n`;\n\nexport const ModalSpan = styled.span`\n  font-size: 18px;\n  font-family: 'Roboto';\n  line-height: 1.33;\n  color: var(--primary-color-blue);\n`;\n\nexport const ModalInfo = styled.p`\n  font-size: 12px;\n  font-family: 'Roboto';\n  line-height: 1.33;\n  color: #8f8f8f;\n  border: 1px solid var(--secondary-color-blue-3);\n  border-radius: 10px;\n  padding: 10px;\n  width: 256px;\n  padding: 10px;\n  margin-bottom: 24px;\n  height: 100px;\n  @media screen and (min-width: 768px) {\n    padding: 10px;\n    width: 656px;\n    height: 52px;\n  }\n  @media screen and (min-width: 1440px) {\n    width: 544px;\n    height: 68px;\n  }\n`;\n\nexport const ModalForm = styled.form``;\n\nexport const ModalCalc = styled.p`\n  font-weight: 500;\n  font-family: 'Roboto';\n  font-size: 18px;\n  line-height: 1.11;\n  margin-bottom: 16px;\n  color: var(--primary-color-black);\n`;\n\nexport const GenderWrapper = styled.div`\n  display: flex;\n  margin-bottom: 16px;\n`;\n\nexport const ModalLabel = styled.label`\n  font-family: 'Roboto';\n  font-size: 16px;\n  font-family: 'Roboto';\n  line-height: 1.25;\n  margin-bottom: 8px;\n  color: var(--primary-color-black);\n`;\n\nexport const ModalRadioInputWoman = styled.input.attrs({\n  type: 'radio',\n  id: 'woman',\n})`\n  appearance: none;\n  width: 14px;\n  height: 14px;\n  border: 1px solid var(--primary-color-blue);\n  border-radius: 50%;\n  outline: none;\n  box-shadow: 0 0 5px var(--primary-color-blue);\n\n  &:before {\n    content: '';\n    display: block;\n    width: 8px;\n    height: 8px;\n    margin: 2px;\n    border-radius: 50%;\n  }\n\n  &:checked:before {\n    background: var(--primary-color-blue);\n  }\n`;\n\nexport const ModalRadioInputMan = styled.input.attrs({\n  type: 'radio',\n  id: 'man',\n})`\n  appearance: none;\n  width: 14px;\n  height: 14px;\n  border: 1px solid var(--primary-color-blue);\n  border-radius: 50%;\n  outline: none;\n  box-shadow: 0 0 5px var(--primary-color-blue);\n\n  &:before {\n    content: '';\n    display: block;\n    width: 8px;\n    height: 8px;\n    margin: 2px;\n    border-radius: 50%;\n  }\n\n  &:checked:before {\n    background: var(--primary-color-blue);\n  }\n`;\nexport const RadioLabel = styled.label`\n  margin-right: 24px;\n  font-size: 16px;\n  font-family: 'Roboto';\n  line-height: 125%;\n  color: var(--primary-color-black);\n`;\n\nexport const InputWrapper = styled.div`\n  margin-bottom: 16px;\n  display: flex;\n  flex-direction: column;\n  width: 256px;\n  height: 72px;\n  @media screen and (min-width: 768px) {\n    width: 656px;\n  }\n  @media screen and (min-width: 1440px) {\n    width: 544px;\n    height: 92px;\n    margin-bottom: 0px;\n  }\n`;\n\nexport const ModalInput = styled.input`\n  border: 1px solid #d7e3ff;\n  font-family: 'Roboto';\n  border-radius: 6px;\n  padding: 12px 10px;\n  width: 256px;\n  height: 44px;\n  outline: none;\n  color: var(--primary-color-blue);\n  &:: hover,\n&:focus {\n    border: 3px solid #d7e3ff;\n  }\n  &::placeholder {\n    color: var(--primary-color-blue);\n  }\n  @media screen and (min-width: 768px) {\n    width: 656px;\n  }\n  @media screen and (min-width: 1440px) {\n    width: 544px;\n  }\n`;\n\nexport const AmountWrapper = styled.div`\n  display: flex;\n  margin-top: 68px;\n  align-items: center;\n  @media screen and (min-width: 768px) {\n    margin-top: 32px;\n  }\n  @media screen and (min-width: 1440px) {\n    margin-top: 16px;\n  }\n`;\n\nexport const Amount = styled.p`\n  width: 190px;\n  font-size: 16px;\n  font-family: 'Roboto';\n  line-height: 1.25;\n  color: var(--primary-color-black);\n  @media screen and (min-width: 768px) {\n    width: 376px;\n  }\n`;\n\nexport const ModalButton = styled.button`\n  border-radius: 10px;\n  font-family: 'Roboto';\n  padding: 8px 30px;\n  width: 256px;\n  height: 36px;\n  box-shadow: 0 4px 8px 0 rgba(64, 123, 255, 0.34);\n  background: var(--primary-color-blue);\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.25;\n  text-align: center;\n  position: absolute;\n  bottom: 24px;\n  color: var(--primary-color-white);\n\n  &:hover,\n  &:focus {\n    cursor: pointer;\n    box-shadow: 0 4px 8px 0 rgba(64, 123, 255, 0.34);\n    transition: box-shadow 0.25s cubic-bezier(0.4, 0, 0.2, 1);\n  }\n  @media screen and (min-width: 768px) {\n    bottom: 32px;\n    right: 24px;\n    padding: 10px 30px;\n    width: 160px;\n    height: 44px;\n  }\n`;\n\nexport const WaterIntakeSpan = styled.span`\n  font-weight: 700;\n  font-family: 'Roboto';\n  font-size: 18px;\n  line-height: 1.33;\n  margin-left: 6px;\n  color: var(--primary-color-blue);\n`;\n\nexport const InputWrapperWater = styled.div`\n  margin-top: 16px;\n  margin-bottom: 16px;\n  display: flex;\n  flex-direction: column;\n  width: 256px;\n  height: 72px;\n  &:invalid {\n    color: var(--secondary-color-red);\n    border-color: var(--secondary-color-red);\n  }\n  @media screen and (min-width: 768px) {\n    margin-top: 24px;\n    width: 656px;\n    margin-bottom: 24px;\n  }\n  @media screen and (min-width: 1440px) {\n    width: 544px;\n    height: 80px;\n  }\n`;\n\nexport const ModalLabelWater = styled.label`\n  font-weight: 500;\n  font-family: \"Roboto\"; \n  font-size: 18px;\n  margin-bottom: 8px;\n  line-height: 1.11;\n  color: var(--primary-color-black);\n  }\n  @media screen and (min-width: 768px) {\n    margin-bottom: 16px;\n  }\n`;\nexport const ErrorSpan = styled.span`\n  color: red;\n  display: none;\n  font-family: 'Roboto';\n  font-size: 12px;\n  line-height: 1.33;\n  margin-top: 4px;\n  @media screen and (min-width: 768px) {\n    margin-top: 8px;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { updateWaterRateThunk } from '../../../redux/auth/operations';\nimport {\n  ModalWrapper,\n  Modalsvg,\n  AmountWrapper,\n  ModalLabelWater,\n  InputWrapperWater,\n  ModalCloseBtn,\n  ButtonWrapper,\n  InputWrapper,\n  ModalHeader,\n  GenderWrapper,\n  ModalParagraphForGirl,\n  ModalParagraphForMan,\n  ModalSpan,\n  ModalInfo,\n  FormulaWrapper,\n  ModalForm,\n  ModalCalc,\n  ModalLabel,\n  ModalRadioInputWoman,\n  ModalRadioInputMan,\n  RadioLabel,\n  ModalInput,\n  Amount,\n  ModalButton,\n  WaterIntakeSpan,\n} from '../DailyNormaStyled';\nimport { icons } from '../../../assets';\n\nconst DailyModal = ({ onClose }) => {\n  const dispatch = useDispatch();\n  const [gender, setGender] = useState('woman');\n  const [weight, setWeight] = useState('');\n  const [activityTime, setActivityTime] = useState('');\n  const [requiredWater, setRequiredWater] = useState(0);\n  const [waterToDrink, setwaterToDrink] = useState('');\n\n  const handleWeightChange = event => {\n    let weightValue = parseFloat(event.target.value);\n    if (isNaN(weightValue)) {\n      weightValue = '';\n    }\n    setWeight(weightValue);\n    calculateWaterRate(weightValue, activityTime);\n  };\n\n  const handleActivityTimeChange = event => {\n    let activityTimeValue = parseFloat(event.target.value);\n    if (isNaN(activityTimeValue)) {\n      activityTimeValue = 0;\n    }\n    setActivityTime(activityTimeValue);\n    calculateWaterRate(weight, activityTimeValue);\n  };\n\n  useEffect(() => {\n    calculateWaterRate(gender, weight, activityTime);\n  }, [weight, activityTime, gender]);\n\n  const calculateWaterRate = (gender, weight, activityTime) => {\n    let waterCalculated = 0;\n    if (gender === 'woman') {\n      waterCalculated = weight * 0.03 + activityTime * 0.4;\n    } else if (gender === 'man') {\n      waterCalculated = weight * 0.04 + activityTime * 0.6;\n    }\n    if (waterCalculated === 0) {\n      setRequiredWater(0);\n      return;\n    }\n    setRequiredWater(waterCalculated.toFixed(1));\n  };\n\n  const handleInputChange = event => {\n    setwaterToDrink(event.target.value);\n    let newWaterRate = parseFloat(event.target.value);\n    if (isNaN(newWaterRate)) {\n      setWeight('');\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!waterToDrink) return;\n    dispatch(updateWaterRateThunk({ amountOfWater: waterToDrink }));\n    onClose();\n  };\n\n  return (\n    <ModalWrapper>\n      <ButtonWrapper>\n        <ModalHeader>My daily norma</ModalHeader>\n        <ModalCloseBtn><Modalsvg onClick={onClose}>\n          <use href={`${icons}#icon-x-mark`}></use>\n        </Modalsvg></ModalCloseBtn>\n      </ButtonWrapper>\n      <FormulaWrapper>\n        <ModalParagraphForGirl>\n          For girl:<ModalSpan>V=(M*0,03) + (T*0,4)</ModalSpan>\n        </ModalParagraphForGirl>\n        <ModalParagraphForMan>\n          For man:<ModalSpan>V=(M*0,04) + (T*0,6)</ModalSpan>\n        </ModalParagraphForMan>\n      </FormulaWrapper>\n      <ModalInfo>\n        * V is the volume of the water norm in liters per day, M is your body\n        weight, T is the time of active sports, or another type of activity\n        commensurate in terms of loads (in the absence of these, you must set 0)\n      </ModalInfo>\n      <ModalForm onSubmit={handleSubmit}>\n        <ModalCalc>Calculate your rate:</ModalCalc>\n       \n          <GenderWrapper>\n            <ModalRadioInputWoman\n              id='woman'\n              type=\"radio\"\n              value=\"girl\"\n              checked={gender === 'woman'}\n              onChange={() => setGender('woman')}\n            />\n            <RadioLabel htmlFor=\"woman\">For woman</RadioLabel>\n             <ModalRadioInputMan\n              id='man'\n              type=\"radio\"\n              value=\"man\"\n              checked={gender === 'man'}\n              onChange={() => setGender('man')}\n            />\n<RadioLabel htmlFor=\"man\">For man</RadioLabel>\n          </GenderWrapper>\n        \n        <InputWrapper>\n          <ModalLabel>Your weight in kilograms:</ModalLabel>\n          <ModalInput\n            type=\"text\"\n            value={weight}\n            onChange={handleWeightChange}\n             placeholder='0'\n          />\n        </InputWrapper>\n\n        <InputWrapper>\n          <ModalLabel>\n            The time of active participation in sports or other activities with\n            a high physical. load in hours:\n          </ModalLabel>\n          <ModalInput\n            type=\"text\"\n            value={activityTime}\n            onChange={handleActivityTimeChange}\n             placeholder='0'\n          />\n        </InputWrapper>\n        <AmountWrapper>\n          <Amount>The required amount of water in liters per day:</Amount>\n          <WaterIntakeSpan>{requiredWater} L</WaterIntakeSpan>\n        </AmountWrapper>\n        <InputWrapperWater>\n          <ModalLabelWater>\n            Write down how much water you will drink:\n          </ModalLabelWater>\n          <ModalInput\n            required\n            type=\"text\"\n            value={waterToDrink}\n            onChange={handleInputChange}\n            min={1}\n            max={15000}\n         placeholder='0'\n          />\n        </InputWrapperWater>\n        <ModalButton type=\"submit\">Save</ModalButton>\n      </ModalForm>\n    </ModalWrapper>\n  );\n};\n\nexport default DailyModal;\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectWaterRate } from '../../redux/water/selectors';\nimport DailyModal from './DailyModal/DailyModal';\n\nimport { StyledEngineProvider } from '@mui/material/styles';\nimport {\n  DailyNormaWrapper,\n  WaterRateWrapper,\n  DailyNormaHeader,\n  WaterRateParagraph,\n  DailyNormaDialog,\n  DailyNormaButton,\n} from './DailyNormaStyled';\n\nexport const DailyNorma = () => {\n  const waterRate = useSelector(selectWaterRate);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const handleEditClick = () => {\n    setIsModalOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <DailyNormaWrapper>\n      <DailyNormaHeader>My daily norma</DailyNormaHeader>\n      <WaterRateWrapper>\n        <WaterRateParagraph>{waterRate} L</WaterRateParagraph>\n        <DailyNormaButton onClick={handleEditClick}>Edit</DailyNormaButton>\n      </WaterRateWrapper>\n\n      <StyledEngineProvider injectFirst>\n        <DailyNormaDialog\n          open={isModalOpen} onClose={handleCloseModal}\n          PaperComponent={() => <DailyModal onClose={handleCloseModal} />}\n        ></DailyNormaDialog>\n      </StyledEngineProvider>\n    </DailyNormaWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ModalWrap = styled.div`\nwidth: 800px;\n`;\n\nexport const ModalContent = styled.div`\nwidth: 800px;\n`;\n\nexport const ModalReverse = styled.div`\n// display: flex;\n// flex-direction: column-reverse;\n`\n\nexport const OpenButton = styled.button`\n    cursor: pointer;\n    // width: 182px;\n    height: 24px;\n    font-family: Roboto;\n    font-size: 18px;\n    font-weight: 500;\n    line-height: 24px;\n    text-align: left;\n    color: #407BFF;\n  // border: 1px solid #407BFF;\n  &:before{\n    content: '+';\n    margin: 0 8px 0 0;\n  }\n`;\n","import React, { useState } from 'react';\nimport Dialog from '@mui/material/Dialog';\nimport { OpenButton, ModalReverse} from './ModalWL.styled';\nimport WaterListModal from 'components/WaterListModal/WaterListModal';\n\nconst ModalAddEdit = ({ onSave }) => {\n  const [waterData, setWaterData] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  const [isVisible, setIsVisible] = useState(true);\n\n  const handleSaveWaterData = (result, time) => {\n    setWaterData([...waterData, { result, time }]);\n  };\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n  };\n\n  const handleOpenModal = (isEditing) => {\n    setIsModalOpen(true);\n    setIsEditing(isEditing);\n    setIsVisible(!isEditing); \n  };\n\n  return (\n    <ModalReverse>\n      <Dialog open={isModalOpen} onClose={handleCloseModal} maxWidth=\"800px\">\n        <WaterListModal\n          onSave={(result, time) => {\n            handleSaveWaterData(result, time);\n            onSave(result, time);\n            handleCloseModal();\n          }}\n          onClose={handleCloseModal}\n          title={isEditing ? \"Edit the entered amount of water\" : \"Add water\"}\n          isVisible={!isVisible}\n        />\n      </Dialog>\n      <OpenButton onClick={() => handleOpenModal(false)}>Add water</OpenButton>\n    </ModalReverse>\n  );\n};\n\nexport default ModalAddEdit;","import styled from 'styled-components';\n\nexport const ListTitle = styled.h3`\n  font-family: Roboto;\n  font-size: 26px;\n  font-weight: 500;\n  line-height: 32px;\n  text-align: left;\n  color: var(--primary-color-black);\n`;\n\nexport const Title = styled.h3`\n  font-family: Roboto;\n  font-size: 24px;\n  font-weight: 500;\n  line-height: 30px;\n`;\nexport const List = styled.ul`\n  width: 100%;\n  height: 200px;\n  overflow-y: auto;\n`;\nexport const ListElem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  border-bottom: 1px solid var(--secondary-color-blue-3);\n  padding: 12px 0;\n`;\nexport const ListElemInfoContainer = styled.div`\n  width: 70%;\n  display: flex;\n  justify-content: start;\n  align-items: center;\n  gap: 12px;\n\n  @media only screen and (min-width: 768px) {\n    width: 50%;\n  }\n`;\nexport const ListElemButtonsContainer = styled.div`\n  width: 30%;\n  display: flex;\n  justify-content: end;\n  align-items: center;\n  gap: 18px;\n\n  @media only screen and (min-width: 768px) {\n    width: 50%;\n  }\n`;\nexport const Icon = styled.svg`\n  width: 24px;\n  height: 24px;\n  fill: #407bff;\n`;\nexport const ResultMl = styled.span`\n  font-family: Roboto;\n  font-size: 18px;\n  font-weight: 400;\n  line-height: 24px;\n  color: var(--primary-color-blue);\n`;\nexport const ResultTime = styled.span`\n  font-family: Roboto;\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 24px;\n  color: var(--primary-color-black);\n`;\nexport const ChangeWaterBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 24px;\n  height: 24px;\n  background-color: transparent;\n  cursor: pointer;\n`;\nexport const DeleteWaterBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 24px;\n  height: 24px;\n  background-color: transparent;\n  cursor: pointer;\n`;\n\nexport const DeleteBtnIcon = styled.svg`\n  width: 16px;\n  height: 16px;\n  stroke: var(--secondary-color-red);\n  fill: transparent;\n`;\nexport const ChangeBtnIcon = styled.svg`\n  width: 16px;\n  height: 16px;\n  stroke: var(--secondary-color-blue-2);\n  fill: transparent;\n  &:hover {\n    stroke: var(--secondary-color-orange);\n  }\n`;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ModalAddEdit from 'components/ModalWL/ModalAddEdit';\nimport WaterListModal from 'components/WaterListModal/WaterListModal';\nimport {\n  ListTitle,\n  Title,\n  List,\n  ListElem,\n  ListElemInfoContainer,\n  ListElemButtonsContainer,\n  Icon,\n  ResultMl,\n  ResultTime,\n  ChangeWaterBtn,\n  DeleteWaterBtn,\n  DeleteBtnIcon,\n  ChangeBtnIcon,\n} from './TodayList.styled';\nimport sprite from '../../assets/icons/sprite.svg';\nimport Dialog from '@mui/material/Dialog';\nimport {\n  getWaterPerDayThunk,\n  addWaterRateThunk,\n  deleteWaterThunk,\n  updateWaterThunk,\n} from '../../redux/water/operations';\nimport { selectListWaterOfDay } from '../../redux/water/selectors';\n\nconst TodayList = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedItemIndex, setSelectedItemIndex] = useState(null);\n  const [isEditing, setIsEditing] = useState(false);\n  const [isVisible, setIsVisible] = useState(true);\n  const dispatch = useDispatch();\n  const listWaterOfDay = useSelector(selectListWaterOfDay);\n\n  useEffect(() => {\n    dispatch(getWaterPerDayThunk());\n  }, [dispatch]);\n\n  useEffect(() => {});\n\n  const handleSaveWaterData = (result, time) => {\n    dispatch(addWaterRateThunk({ value: result, time }));\n  };\n\n  const handleEditWaterData = (index, result, time) => {\n    setSelectedItemIndex(index);\n    setIsModalOpen(true);\n    setIsEditing(isEditing);\n    setIsVisible(true);\n  };\n\n  const handleDeleteWaterData = id => {\n    dispatch(deleteWaterThunk(id));\n  };\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n    setSelectedItemIndex(null);\n  };\n\n  const handleSaveData = (value, time) => {\n    if (selectedItemIndex !== null) {\n      const updatedWaterData = {\n        _id: listWaterOfDay[selectedItemIndex]._id,\n        value,\n        time,\n      };\n      dispatch(updateWaterThunk(updatedWaterData));\n      handleCloseModal();\n    }\n  };\n\n  return (\n    <>\n      <ListTitle>Today</ListTitle>\n      <List>\n        <Title />\n        {listWaterOfDay?.map((item, index) => (\n          <ListElem key={item._id}>\n            <ListElemInfoContainer>\n              <Icon>\n                <use href={`${sprite}#icon-glass`} />\n              </Icon>\n              <ResultMl>{item.value} ml</ResultMl>\n              <ResultTime>{item.time}</ResultTime>\n            </ListElemInfoContainer>\n            <ListElemButtonsContainer>\n              <ChangeWaterBtn\n                onClick={() =>\n                  handleEditWaterData(index, item.value, item.time)\n                }\n              >\n                <ChangeBtnIcon>\n                  <use href={`${sprite}#icon-edit-pensil`} />\n                </ChangeBtnIcon>\n              </ChangeWaterBtn>\n\n              <DeleteWaterBtn onClick={() => handleDeleteWaterData(item._id)}>\n                <DeleteBtnIcon>\n                  <use href={`${sprite}#icon-trash-bin`} />\n                </DeleteBtnIcon>\n              </DeleteWaterBtn>\n            </ListElemButtonsContainer>\n          </ListElem>\n        ))}\n      </List>\n\n      <ModalAddEdit onSave={handleSaveWaterData} />\n\n      <Dialog open={isModalOpen} onClose={handleCloseModal} maxWidth=\"800px\">\n        <WaterListModal\n          onSave={handleSaveData}\n          onClose={handleCloseModal}\n          result={listWaterOfDay[selectedItemIndex]?.result}\n          time={listWaterOfDay[selectedItemIndex]?.time}\n          title={isEditing ? 'Add water' : 'Edit the entered amount of water'}\n          isVisible={isVisible}\n          initialWater={listWaterOfDay?.[selectedItemIndex]?.value}\n          initialTime={listWaterOfDay?.[selectedItemIndex]?.time}\n        />\n      </Dialog>\n    </>\n  );\n};\n\nexport default TodayList;\n","import Container from 'components/Container/Container';\nimport { WaterTracker } from 'components/WaterTracker/WaterTracker';\nimport {\n  HomePageWrapper,\n  DailyNormaWrapper,\n  MyDailyNorma,\n  MyDailyTracker,\n  TodayMonthWrapper,\n} from './HomePageStyled';\nimport Calendar from 'components/Calendar/Calendar';\nimport { DailyNorma } from 'components/DailyNorma/DailyNorma';\nimport Background from 'components/Background/Background';\nimport TodayList from 'components/TodayList/TodayList';\n\nconst HomePage = () => {\n  return (\n    <>\n      <Background />\n      <Container>\n        <HomePageWrapper>\n          <DailyNormaWrapper>\n            <MyDailyNorma>\n              <DailyNorma />\n            </MyDailyNorma>\n            <MyDailyTracker>\n              <WaterTracker></WaterTracker>\n            </MyDailyTracker>\n          </DailyNormaWrapper>\n          <TodayMonthWrapper>\n            <TodayList />\n            <Calendar />\n          </TodayMonthWrapper>\n        </HomePageWrapper>\n      </Container>\n    </>\n  );\n};\n\nexport default HomePage;\n"],"names":["_ref","children","_jsx","WrapperContainer","ProgressPanelContainer","styled","_templateObject","_taggedTemplateLiteral","TodayTitle","_templateObject2","ProgressContainer","_templateObject3","ProgressInput","_templateObject4","ProgressMarks","_templateObject5","ProgressPercents","_templateObject6","AddWaterBtn","_templateObject7","_templateObject8","selectMonthPercentage","state","water","itemsPerMonth","selectWaterRate","auth","user","waterRate","selectListWaterOfDay","listWaterOfDay","Container","ListHeader","Title","CloseButton","ResultContainer","WaterGlass","ResultMl","ResultTime","_templateObject9","DataContainer","_templateObject10","DataTitle","_templateObject11","DataText","_templateObject12","DataBtnsContainer","_templateObject13","DataBtn","_templateObject14","DataResult","_templateObject15","LabelTime","_templateObject16","LabelMl","_templateObject17","InputTime","TextField","_templateObject18","MenuItemCustom","MenuItem","_templateObject19","InputMl","_templateObject20","SaveContainer","_templateObject21","SaveResultTxt","_templateObject22","SaveBtn","_templateObject23","IconBtn","_templateObject24","getCurrentTime","currentDate","Date","hour","getHours","toString","padStart","minutes","getMinutes","formattedHour","roundedMinutes","Math","ceil","formattedMinute","concat","generateHours","hours","i","j","push","onSave","onClose","title","isVisible","_ref$initialWater","initialWater","_ref$initialTime","initialTime","_useState","useState","_useState2","_slicedToArray","result","setResult","_useState3","_useState4","time","setTime","_jsxs","onClick","href","icons","value","select","onBlur","event","target","onChange","_toConsumableArray","map","index","newValue","inputValue","parseInt","localStorage","setItem","waterData","setWaterData","isModalOpen","setIsModalOpen","_useState5","_useState6","isEditing","setIsEditing","_useState7","_useState8","setIsVisible","handleCloseModal","_Fragment","Dialog","open","maxWidth","WaterListModal","handleSaveWaterData","handleOpenModal","WaterTracker","dispatch","useDispatch","percentages","setPercentages","todayNorma","useSelector","todayData","useEffect","getWaterPerDayThunk","todayValue","reduce","acc","style","backgroundSize","type","min","max","step","ModalAdd","addWaterRateThunk","HomePageWrapper","DailyNormaWrapper","backgroundImage","MyDailyNorma","MyDailyTracker","TodayMonthWrapper","TitleWrapper","MonthText","SvgIcon","MonthYearText","Ul","LiItem","LiCircle","props","$percentage","ProcentageWater","CalendarWrapper","PopUpWrap","DateText","WaterInfo","AccentColor","date","percentOfWaterRate","recordsCount","percentagePerMonth","waterPerDay","dailyWaterRate","todayDate","setCurrentDate","getFullYear","currentYear","setCurrentYear","monthName","toLocaleString","month","getMonth","length","getMonthPercentageThunk","previousMonth","width","height","nextMonth","Popup","trigger","position","on","closeOnDocumentClick","keepTooltipInside","arrow","offsetX","offsetY","PopUpCard","DailyNormaHeader","WaterRateWrapper","WaterRateParagraph","DailyNormaButton","DailyNormaDialog","ModalWrapper","ModalCloseBtn","Modalsvg","ButtonWrapper","ModalHeader","FormulaWrapper","ModalParagraphForGirl","ModalParagraphForMan","ModalSpan","ModalInfo","ModalForm","ModalCalc","GenderWrapper","ModalLabel","ModalRadioInputWoman","id","ModalRadioInputMan","RadioLabel","InputWrapper","ModalInput","_templateObject25","AmountWrapper","_templateObject26","Amount","_templateObject27","ModalButton","_templateObject28","WaterIntakeSpan","_templateObject29","InputWrapperWater","_templateObject30","ModalLabelWater","_templateObject31","_templateObject32","gender","setGender","weight","setWeight","activityTime","setActivityTime","requiredWater","setRequiredWater","_useState9","_useState10","waterToDrink","setwaterToDrink","calculateWaterRate","waterCalculated","toFixed","onSubmit","e","preventDefault","updateWaterRateThunk","amountOfWater","checked","htmlFor","weightValue","parseFloat","isNaN","placeholder","activityTimeValue","required","newWaterRate","DailyNorma","StyledEngineProvider","injectFirst","PaperComponent","DailyModal","ModalReverse","OpenButton","ListTitle","List","ListElem","ListElemInfoContainer","ListElemButtonsContainer","Icon","ChangeWaterBtn","DeleteWaterBtn","DeleteBtnIcon","ChangeBtnIcon","_listWaterOfDay$selec","_listWaterOfDay$selec2","_listWaterOfDay$selec3","_listWaterOfDay$selec4","selectedItemIndex","setSelectedItemIndex","item","sprite","handleEditWaterData","_id","deleteWaterThunk","ModalAddEdit","updatedWaterData","updateWaterThunk","Background","TodayList","Calendar"],"sourceRoot":""}