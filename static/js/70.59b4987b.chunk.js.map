{"version":3,"file":"static/js/70.59b4987b.chunk.js","mappings":"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","sources":["components/Container/Container.jsx","components/WaterTracker/WaterTracker.styled.jsx","redux/water/selectors.js","components/WaterListModal/WaterListModal.styled.jsx","utils/timeUtils.js","components/WaterListModal/WaterListModal.jsx","components/WaterTracker/WaterTrackerModal.jsx","components/WaterTracker/WaterTracker.jsx","pages/HomePage/HomePageStyled.js","components/Calendar/Calendar.styled.js","components/Calendar/PopUp/PopUp.styled.js","components/Calendar/PopUp/PopUp.jsx","components/Calendar/Calendar.jsx","components/DailyNorma/DailyNormaStyled.js","components/DailyNorma/DailyModal/DailyModal.jsx","components/DailyNorma/DailyNorma.jsx","components/ModalWL/ModalWL.styled.jsx","components/ModalWL/ModalAddEdit.jsx","components/TodayList/TodayList.styled.jsx","components/ModalWL/ModalDellWater.jsx","components/TodayList/TodayList.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["import { WrapperContainer } from './ContainerStyled';\n\nconst Container = ({ children }) => {\n  return <WrapperContainer>{children}</WrapperContainer>;\n};\n\nexport default Container;\n","import styled from 'styled-components';\n\nexport const ProgressPanelContainer = styled.div`\n  max-width: 280px;\n  margin-bottom: 40px;\n\n  @media screen and (min-width: 768px) {\n    max-width: 704px;\n    display: flex;\n    align-items: center;\n  }\n  @media only screen and (min-width: 1440px) {\n    max-width: 592px;\n    height: 90px;\n  }\n`;\n\nexport const TodayTitle = styled.h3`\n  margin-bottom: 8px;\n  align-self: baseline;\n  color: var(--primary-color-blue);\n  font-size: 18px;\n  font-weight: 400;\n  line-height: 1.33;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 16px;\n  }\n`;\n\nexport const ProgressContainer = styled.div`\n  margin-bottom: 16px;\n  width: 280px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  @media screen and (min-width: 768px) {\n    width: 356px;\n    height: 90px;\n    margin-right: 12px;\n    margin-bottom: 0;\n  }\n  @media only screen and (min-width: 1440px) {\n    width: 391px;\n    margin-right: 23px;\n  }\n`;\n\nexport const ProgressInput = styled.input`\n  -webkit-appearance: none;\n  appearance: none;\n  width: 256px;\n  border-radius: 30px;\n  margin-bottom: 6px;\n  outline: none;\n\n  background: var(--secondary-color-blue-3);\n  background-image: linear-gradient(\n    var(--secondary-color-blue-2),\n    var(--secondary-color-blue-2)\n  );\n\n  background-repeat: no-repeat;\n\n  &::-webkit-slider-thumb {\n    -webkit-appearance: none;\n    appearance: none;\n    height: 14px;\n    width: 14px;\n    margin-top: -3px;\n\n    border-radius: 50%;\n    background-color: var(--primary-color-white);\n    border: 1px solid var(--primary-color-blue);\n  }\n\n  &::-webkit-slider-runnable-track {\n    height: 8px;\n    border-radius: 30px;\n    background: var(--secondary-color-blue-2);\n    -webkit-appearance: none;\n    box-shadow: none;\n    border: none;\n    background: transparent;\n  }\n\n  &::-webkit-slider-thumb:hover {\n    background: var(--primary-color-white);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 325px;\n  }\n  @media only screen and (min-width: 1440px) {\n    width: 360px;\n  }\n`;\n\nexport const ProgressMarks = styled.div`\n  width: 256px;\n  margin-bottom: 4px;\n  display: flex;\n  justify-content: space-between;\n  & span {\n    font-size: 8px;\n    color: #d7e3ff;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 325px;\n    margin-bottom: 8px;\n  }\n  @media only screen and (min-width: 1440px) {\n    width: 360px;\n    margin-bottom: 4px;\n  }\n`;\n\nexport const ProgressPercents = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  & span {\n    font-family: Roboto, sans-serif;\n    color: var(--Primery-Color-Blue, #407bff);\n    text-align: center;\n    font-size: 12px;\n    line-height: 1.33;\n    width: 30px;\n  }\n\n  & span:nth-child(2) {\n    font-size: 16px;\n    font-weight: 500;\n    line-height: 1.25;\n  }\n`;\n\nexport const AddWaterBtn = styled.button`\n  width: 100%;\n  height: 36px;\n  font-family: Roboto, sans-serif;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n\n  border: none;\n  border-radius: 10px;\n  background: var(--primary-color-blue);\n  box-shadow: 0px 4px 8px 0px rgba(64, 123, 255, 0.34);\n\n  transition: box-shadow 0.25s cubic-bezier(0.4, 0, 0.2, 1);\n\n  & span {\n    font-size: 16px;\n    color: var(--primary-color-white);\n    line-height: 1.25;\n  }\n\n  &:hover {\n    box-shadow: 0px 4px 14px 0px rgba(64, 123, 255, 0.54);\n    cursor: pointer;\n  }\n\n  &:active {\n    box-shadow: 0 0;\n  }\n\n  & svg {\n    width: 24px;\n    height: 24px;\n    stroke: var(--primary-color-white);\n    fill: var(--primary-color-blue);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 336px;\n    height: 44px;\n    & span {\n      font-size: 18px;\n    }\n  }\n  @media only screen and (min-width: 1440px) {\n    width: 178px;\n  }\n`;\n\nexport const SvgPlus = styled.svg`\n  stroke: var(--primary-color-white);\n`;\n","export const selectMonthPercentage = state => state.water.itemsPerMonth;\nexport const selectWaterRate = state => state.auth.user.waterRate;\nexport const selectListWaterOfDay = state => state.water.listWaterOfDay;\nexport const selectDayPercentage = state => state.water.percentOfDailyNorm;\n","import styled from 'styled-components';\nimport { TextField, MenuItem } from '@mui/material';\n\nexport const OpenButton = styled.button`\n  width: 280px;\n  height: 36px;\n  padding: 6px 76px 6px 76px;\n  border-radius: 10px 0px 0px 0px;\n  opacity: 0px;\n  background-color: #407bff;\n`;\n\nexport const Container = styled.div`\n  position: relative;\n  max-height: 100%;\n  padding: 24px 12px;\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n  border-radius: 10px;\n  @media only screen and (min-width: 768px) {\n    padding: 32px 24px;\n    width: 704px;\n    height: 100%;\n  }\n  @media only screen and (min-width: 1440px) {\n    width: 592px;\n  }\n`;\n\nexport const ListHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 50px;\n`;\nexport const Title = styled.h2`\n  font-family: Roboto;\n  font-size: 26px;\n  font-weight: 500;\n  line-height: 32px;\n`;\nexport const CloseButton = styled.button`\n  width: 24px;\n  height: 24px;\n  cursor: pointer;\n`;\nexport const ResultContainer = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 16px;\n  width: 100%;\n  height: 52px;\n  background-color: var(--secondary-color-blue-1);\n  border-radius: 10px;\n  padding: 8px 24px;\n\n  @media only screen and (min-width: 768px) {\n    width: 256px;\n    height: 52px;\n    padding: 8px 24px;\n  }\n`;\nexport const WaterGlass = styled.svg`\n  width: 24px;\n  height: 24px;\n  fill: var(--primary-color-blue);\n`;\nexport const ResultMl = styled.span`\n  display: block;\n  font-family: Roboto;\n  font-size: 18px;\n  font-weight: 400;\n  line-height: 24px;\n  color: var(--primary-color-blue);\n`;\nexport const ResultTime = styled.span`\n  display: block;\n  font-family: Roboto;\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 24px;\n  color: #2f2f2f;\n`;\nexport const DataContainer = styled.div`\n  width: 194px;\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\nexport const DataTitle = styled.h3`\n  font-family: Roboto;\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 20px;\n  color: var(--primary-color-black);\n`;\nexport const DataText = styled.p`\n  font-family: Roboto;\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 20px;\n  color: #2f2f2f;\n`;\nexport const DataBtnsContainer = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 6px;\n`;\nexport const DataBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 44px;\n  height: 44px;\n  border-radius: 50%;\n  border: 1px solid #9ebbff;\n  cursor: pointer;\n  color: var(--secondary-color-blue-2)\n  background-color: transparent;\n  padding: 0;\n  &:hover {\n    box-shadow: 0px 2px 4px 0px #407bff33;\n  }\n`;\nexport const DataResult = styled.p`\n  width: 92px;\n  height: 36px;\n  padding: 6px 10px 6px 10px;\n  border-radius: 40px;\n  background-color: #d7e3ff;\n  color: #407bff;\n  font-family: Roboto;\n  font-size: 18px;\n  font-weight: 700;\n  line-height: 24px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nexport const LabelTime = styled.label`\n  font-family: Roboto;\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 20px;\n  color: #2f2f2f;\n`;\nexport const LabelMl = styled.label`\n  font-family: Roboto;\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 20px;\n  color: #2f2f2f;\n`;\n// export const InputTime = styled(TextField)`\n// '.MuiSelect-select-MuiInputBase-input-MuiOutlinedInput-input: {\n//   border: '1px solid red',\n// },\n//   width: 100%;\n//   height: 44px;\n//   padding: 12px 10px;\n//   border-radius: 6px;\n//   border: 1px solid #d7e3ff;\n//   color: #407bff;\n//   outline: none;\n\n//   @media only screen and (min-width: 768px) {\n//     width: 544px;\n//   }\n//   @media only screen and (min-width: 1440px) {\n//     width: 100%;\n//   }\n// `;\nexport const InputTime = styled(TextField)`\n  & .MuiOutlinedInput-root fieldset {\n    outline: none;\n    border: none;\n  }\n  & .MuiOutlinedInput-root {\n    width: 100%;\n    height: 44px;\n    padding: 12px 10px;\n    border-radius: 6px;\n    border: 1px solid var(--secondary-color-blue-3);\n    color: #407bff;\n    &:hover fieldset {\n      border: none;\n    }\n  }\n`;\n\nexport const MenuItemCustom = styled(MenuItem)`\n  width: 100%;\n  height: 44px;\n  padding: 12px 10px;\n  border-radius: 6px;\n  border: 1px solid #d7e3ff;\n  color: #407bff;\n  outline: none;\n\n  @media only screen and (min-width: 768px) {\n    width: 544px;\n  }\n  @media only screen and (min-width: 1440px) {\n    width: 100%;\n  }\n`;\n\nexport const InputMl = styled.input`\n  width: 100%;\n  height: 44px;\n  padding: 12px 10px;\n  border-radius: 6px;\n  border: 1px solid #d7e3ff;\n  color: #407bff;\n  outline: none;\n  @media only screen and (min-width: 1440px) {\n    width: 100%;\n  }\n`;\nexport const SaveContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 16px;\n\n  @media only screen and (min-width: 768px) {\n    flex-direction: row;\n    justify-content: end;\n    gap: 10px;\n  }\n`;\nexport const SaveResultTxt = styled.p`\n  font-family: Roboto;\n  font-size: 18px;\n  font-weight: 700;\n  line-height: 24px;\n  text-align: center;\n  color: var(--primary-color-blue);\n\n  @media only screen and (min-width: 768px) {\n    width: 72px;\n  }\n`;\nexport const SaveBtn = styled.button`\n  width: 100%;\n  padding: 8px 30px;\n  border-radius: 10px;\n  background-color: var(--primary-color-blue);\n  color: #fff;\n  font-family: Roboto;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 20px;\n  cursor: pointer;\n  &:hover {\n    box-shadow: 0px 4px 8px 0px #407bff57;\n  }\n  @media only screen and (min-width: 768px) {\n    width: 166px;\n  }\n`;\nexport const IconBtn = styled.svg`\n  width: 24px;\n  height: 24px;\n  fill: var(--secondary-color-blue-2);\n  stroke: var(--secondary-color-blue-2);\n`;\n","export const getCurrentTime = () => {\n    const currentDate = new Date()\n    let hour = currentDate.getHours().toString().padStart(2, '0')\n    const minutes = currentDate.getMinutes();\n    const formattedHour = hour.toString().padStart(2, '0');\n    // const formattedMinute = Math.ceil(minutes / 5) * 5 .toString().padStart(2, '0');\n    const roundedMinutes = Math.ceil(minutes / 5) * 5;\n    const formattedMinute = roundedMinutes < 10 ? '0' + roundedMinutes : roundedMinutes;\n    return `${formattedHour}:${formattedMinute}`;\n}\n\nexport const generateHours = () => {\n    const hours = [];\n    for (let i = 0; i < 24; i++) {\n        for (let j = 0; j < 60; j += 5) {\n            const hour = i;\n            const formattedHour = `${hour.toString().padStart(2, '0')}:${j.toString().padStart(2, '0')}`;\n            hours.push(formattedHour);\n        }\n    }\n    return hours;\n};","import React, { useState } from 'react';\nimport {\n  Container,\n  ListHeader,\n  Title,\n  CloseButton,\n  ResultContainer,\n  WaterGlass,\n  ResultMl,\n  ResultTime,\n  DataBtnsContainer,\n  DataTitle,\n  DataResult,\n  DataText,\n  DataContainer,\n  DataBtn,\n  LabelMl,\n  LabelTime,\n  InputMl,\n  InputTime,\n  SaveContainer,\n  SaveResultTxt,\n  SaveBtn,\n  IconBtn,\n  MenuItemCustom,\n} from './WaterListModal.styled';\nimport { icons } from '../../assets';\nimport { getCurrentTime, generateHours } from 'utils/timeUtils';\nimport { useTranslation } from 'react-i18next';\n\nconst WaterListModal = ({\n  onSave,\n  onClose,\n  title,\n  isVisible,\n  initialWater = 50,\n  initialTime = getCurrentTime(),\n}) => {\n  const [result, setResult] = useState(initialWater);\n  const [time, setTime] = useState(initialTime);\n  const { t } = useTranslation();\n\n\n  const handleChange = event => {\n    const inputValue = event.target.value;\n    let newValue;\n    if (inputValue === '') {\n      newValue = 0;\n    } else {\n      newValue = parseInt(inputValue, 10);\n    }\n    setResult(newValue);\n  };\n\n  const handleTimeChange = event => {\n    setTime(event.target.value);\n  };\n\n  const increment = () => {\n    const value = result + 50;\n    setResult(value);\n  };\n  const decrement = () => {\n    const value = result - 50;\n    if (value >= 0) {\n      setResult(value);\n    } else {\n      setResult(0);\n    }\n  };\n\n  const handleBlur = event => {\n    setTime(event.target.value);\n  };\n  const handleSave = () => {\n    onSave(result, time);\n    localStorage.setItem('savedResult', result);\n    localStorage.setItem('savedTime', time);\n  };\n\n  return (\n    <Container>\n      <ListHeader>\n        <Title>{title}</Title>\n        <CloseButton onClick={onClose}>\n          <IconBtn>\n            <use href={`${icons}#icon-close-x`} />\n          </IconBtn>\n        </CloseButton>\n      </ListHeader>\n      {isVisible && (\n        <ResultContainer>\n          <WaterGlass>\n            <use href={`${icons}#icon-glass`} />\n          </WaterGlass>\n          <ResultMl>{`${result}ml`}</ResultMl>\n          <ResultTime>{time}</ResultTime>\n        </ResultContainer>\n      )}\n      <DataContainer>\n        <DataTitle>{t('water_list_mod.correct')}</DataTitle>\n        <DataText>{t('water_list_mod.amount')}</DataText>\n        <DataBtnsContainer>\n          <DataBtn onClick={decrement}>\n            <IconBtn>\n              <use href={`${icons}#icon-minus-small`} />\n            </IconBtn>\n          </DataBtn>\n          <DataResult>{`${result}ml`}</DataResult>\n          <DataBtn onClick={increment}>\n            <IconBtn>\n              <use href={`${icons}#icon-plus-small`} />\n            </IconBtn>\n          </DataBtn>\n        </DataBtnsContainer>\n      </DataContainer>\n      <LabelTime>{t('water_list_mod.time')}</LabelTime>\n      <InputTime\n        select\n        value={time}\n        onBlur={handleBlur}\n        onChange={handleTimeChange}\n      >\n        {[getCurrentTime(), ...generateHours()].map((hour, index) => (\n          <MenuItemCustom key={index} value={hour}>\n            {hour}\n          </MenuItemCustom>\n        ))}\n      </InputTime>\n      <LabelMl>{t('water_list_mod.waterUsed')}</LabelMl>\n      <InputMl value={result} onChange={handleChange} />\n      <SaveContainer>\n        <SaveResultTxt>{`${result}ml`}</SaveResultTxt>\n        <SaveBtn onClick={handleSave}>{t('water_list_mod.save')}</SaveBtn>\n      </SaveContainer>\n    </Container>\n  );\n};\nexport default WaterListModal;\n","import React, { useState } from 'react';\nimport Dialog from '@mui/material/Dialog';\nimport { AddWaterBtn } from './WaterTracker.styled';\nimport WaterListModal from 'components/WaterListModal/WaterListModal';\nimport { icons } from '../../assets/';\nimport { useTranslation } from 'react-i18next';\n\nconst ModalAdd = ({ onSave }) => {\n  const [waterData, setWaterData] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  const [isVisible, setIsVisible] = useState(true);\n  const { t } = useTranslation();\n\n  const handleSaveWaterData = (result, time) => {\n    setWaterData([...waterData, { result, time }]);\n  };\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n  };\n\n  const handleOpenModal = (isEditing) => {\n    setIsModalOpen(true);\n    setIsEditing(isEditing);\n    setIsVisible(!isEditing);\n  };\n\n  return (\n    <>\n      <Dialog open={isModalOpen} onClose={handleCloseModal} maxWidth=\"800px\">\n        <WaterListModal\n          onSave={(result, time) => {\n            handleSaveWaterData(result, time);\n            onSave(result, time);\n            handleCloseModal();\n          }}\n          onClose={handleCloseModal}\n          title={isEditing ?  t('water_tracker_mod.editTheEntered') : t('water_tracker_mod.add')}\n\n          isVisible={!isVisible}\n        />\n      </Dialog>\n      {/* <OpenButton onClick={() => handleOpenModal(false)}>Add water</OpenButton> */}\n      <AddWaterBtn onClick={() => handleOpenModal(false)}>\n        <svg>\n          <use href={`${icons}#icon-plus-circle`}></use>\n        </svg>\n        <span>{t('water_tracker_mod.add')}</span>\n      </AddWaterBtn>\n    </>\n  );\n};\n\nexport default ModalAdd;\n","// import { openAddWater } from 'redux/modals/modalsSlice';\n// import { icons } from '../../assets/';\nimport {\n  // AddWaterBtn,\n  ProgressContainer,\n  ProgressInput,\n  ProgressMarks,\n  ProgressPanelContainer,\n  ProgressPercents,\n  TodayTitle,\n} from './WaterTracker.styled';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport {\n  selectWaterRate,\n  selectListWaterOfDay,\n} from '../../redux/water/selectors';\nimport { useEffect, useState } from 'react';\nimport { getWaterPerDayThunk } from '../../redux/water/operations';\nimport ModalAdd from './WaterTrackerModal';\nimport { addWaterRateThunk } from '../../redux/water/operations';\nimport { useTranslation } from 'react-i18next';\n\nexport const WaterTracker = () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const [percentages, setPercentages] = useState(null);\n\n  const todayNorma = useSelector(selectWaterRate); // 2\n  const todayData = useSelector(selectListWaterOfDay);\n\n  useEffect(() => {\n    dispatch(getWaterPerDayThunk());\n  }, [dispatch]);\n\n  useEffect(() => {\n    const todayValue = todayData.reduce((acc, water) => acc + water.value, 0);\n    setPercentages((todayValue / (todayNorma * 1000)) * 100);\n  }, [todayData, todayNorma]);\n\n  const handleSaveWaterData = (result, time) => {\n    // const newData = [...waterData, { result, time }];\n    // console.log(newData);\n    // setWaterData(newData);\n    dispatch(addWaterRateThunk({ value: result, time }));\n  };\n\n  return (\n    <ProgressPanelContainer>\n      <ProgressContainer>\n        <TodayTitle>{t('progress_panel.today')}</TodayTitle>\n        <ProgressInput\n          style={{ backgroundSize: `${percentages}% 100%` }}\n          onChange={() => {}}\n          type=\"range\"\n          value={`${percentages}`}\n          min=\"0\"\n          max=\"100\"\n          step=\"1\"\n        />\n        <ProgressMarks>\n          <span>|</span>\n          <span>|</span>\n          <span>|</span>\n        </ProgressMarks>\n        <ProgressPercents>\n          <span>0%</span>\n          <span>50%</span>\n          <span>100%</span>\n        </ProgressPercents>\n      </ProgressContainer>\n      <ModalAdd onSave={handleSaveWaterData} open={false}/>\n      {/* <AddWaterBtn>\n        <svg>\n          <use href={`${icons}#icon-plus-circle`}></use>\n        </svg>\n        <span>Add water</span>\n      </AddWaterBtn> */}\n    </ProgressPanelContainer>\n  );\n};\n// onClick={() => dispatch(openAddWater())}\n","import styled from 'styled-components';\nimport backgroundImage from '../../assets/images/bottleImage.png';\n\nexport const HomePageWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 40px;\n  margin: 0 auto;\n  padding-top: 24px;\n  padding-bottom: 40px;\n\n  @media screen and (min-width: 768px) {\n    padding-top: 40px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    max-width: 1440px;\n\n    padding: 20px 0 40px;\n    display: flex;\n    flex-direction: row;\n    gap: 32px;\n  }\n`;\n\nexport const DailyNormaWrapper = styled.div`\n  width: 100%;\n  height: 440px;\n  background-image: url(${backgroundImage});\n  background-position: 50% 35%;\n  background-repeat: no-repeat;\n  background-size: 280px 208px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  @media screen and (min-width: 768px) {\n    background-size: 518px 386px;\n    height: 508px;\n    background-position: 50% 0;\n  }\n\n  @media screen and (min-width: 1440px) {\n    background-size: 738px 548px;\n    width: 592px;\n    padding: 30px 0 16px 0;\n    background-position: 50% 0;\n    height: 680px;\n    justify-content: space-between;\n  }\n`;\n\nexport const MyDailyNorma = styled.div`\n  box-shadow: 0px 4px 8px 0px RGBA(158, 187, 255, 0.12);\n  border: 1px solid var(--secondary-color-blue-1);\n  width: 164px;\n  height: 74px;\n  padding: 8px 20px;\n  border-radius: 10px;\n  @media screen and (min-width: 768px) {\n    width: 164px;\n    height: 76px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding: 8px 20px;\n    border-radius: 10px;\n  }\n`;\n\nexport const MyDailyTracker = styled.div`\n  width: 100%;\n  height: 134px;\n\n  @media screen and (min-width: 1440px) {\n    width: 100%;\n    height: 90px;\n  }\n`;\n\nexport const TodayMonthWrapper = styled.div`\n  box-shadow: 0px 4px 14px 0px RGBA(64, 123, 255, 0.3);\n  border-radius: 10px;\n  width: 100%;\n  padding: 24px 8px;\n  background-color: var(--secondary-color-blue-1);\n  height: 836px;\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n  @media screen and (min-width: 768px) {\n    max-width: 704px;\n    max-height: 688px;\n    padding: 32px 24px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    max-width: 592px;\n    max-height: 680px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const TitleWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  user-select: none;\n`;\n\nexport const MonthText = styled.h3`\n  font-weight: 500;\n  font-size: 24px;\n  line-height: 1.25;\n  color: var(--primary-color-black);\n  @media screen and (min-width: 768px) {\n    font-size: 26px;\n  }\n`;\n\nexport const SvgIcon = styled.svg`\n  fill: var(--primary-color-blue);\n  cursor: pointer;\n`;\n\nexport const MonthYearText = styled.span`\n  font-family: 'Roboto', sans-serif;\n  padding: 0 16px;\n  font-size: 16px;\n  line-height: 1.25;\n  color: var(--primary-color-blue);\n  width: 153px;\n  display: inline-block;\n  text-align: center;\n`;\n\nexport const Ul = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px 26px;\n  margin-top: 16px;\n  position: relative;\n  @media screen and (min-width: 768px) {\n    gap: 20px 34px;\n  }\n  @media screen and (min-width: 1440px) {\n    gap: 20px 22px;\n  }\n`;\n\nexport const LiItem = styled.li`\n  cursor: pointer;\n  @media screen and (min-width: 768px) {\n    position: relative;\n  }\n  @media screen and (min-width: 1440px) {\n    position: relative;\n  }\n`;\nexport const LiCircle = styled.div`\n  border: 1px solid\n    ${props =>\n      props.$percentage < 100\n        ? `${'var(--secondary-color-orange)'}`\n        : 'transperent'};\n  width: 32px;\n  height: 32px;\n  border-radius: 20px;\n  background-color: var(--primary-color-white);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1.28571;\n  color: var(--primary-color-black);\n  @media screen and (min-width: 768px) {\n    width: 34px;\n    height: 34px;\n  }\n`;\n\nexport const ProcentageWater = styled.p`\n  font-family: 'Roboto', sans-serif;\n  font-size: 10px;\n  line-height: 1.6;\n  color: var(--primary-color-blue);\n  text-align: center;\n  margin-top: 4px;\n`;\n\nexport const CalendarWrapper = styled.div`\n  min-height: 506px;\n  @media screen and (min-width: 768px) {\n    min-height: 340px;\n  }\n  @media screen and (min-width: 1140px) {\n    min-height: 332px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const PopUpWrap = styled.div`\n  width: 280px;\n  padding: 24px 13px;\n  background-color: var(--primary-color-white);\n  border-radius: 10px;\n  box-shadow: 0 4px 4px 0 rgba(64, 123, 255, 0.3);\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  z-index: 10;\n  @media screen and (min-width: 768px) {\n    width: 292px;\n  }\n`;\n\nexport const DateText = styled.p`\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 1.25;\n  color: var(--primary-color-blue);\n`;\n\nexport const WaterInfo = styled.p`\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 1.25;\n  color: var(--primary-color-black);\n`;\n\nexport const AccentColor = styled.span`\n  font-family: 'Roboto', sans-serif;\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 1.3;\n  color: var(--primary-color-blue);\n`;\n","import { useTranslation } from 'react-i18next';\nimport { PopUpWrap, DateText, WaterInfo, AccentColor } from './PopUp.styled';\n\nconst PopUpCard = ({ waterRate, date, percentOfWaterRate, recordsCount }) => {\n  const { t } = useTranslation();\n\n  return (\n    <PopUpWrap>\n      <DateText>{date}</DateText>\n      <WaterInfo>\n      {t('pop_up_card.daily')} <AccentColor>{waterRate ? waterRate : 0} L</AccentColor>\n      </WaterInfo>\n      <WaterInfo>\n      {t('pop_up_card.fulfillment')}{' '}\n        <AccentColor>\n          {percentOfWaterRate ? percentOfWaterRate : 0}%\n        </AccentColor>\n      </WaterInfo>\n      <WaterInfo>\n      {t('pop_up_card.servings')} <AccentColor>{recordsCount}</AccentColor>\n      </WaterInfo>\n    </PopUpWrap>\n  );\n};\n\nexport default PopUpCard;\n","import { useEffect, useState } from 'react';\nimport {\n  TitleWrapper,\n  MonthText,\n  SvgIcon,\n  MonthYearText,\n  LiItem,\n  LiCircle,\n  Ul,\n  ProcentageWater,\n  CalendarWrapper,\n} from './Calendar.styled';\nimport PopUpCard from './PopUp/PopUp';\nimport Popup from 'reactjs-popup';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { icons } from '../../assets';\nimport { getMonthPercentageThunk } from '../../redux/water/operations';\nimport {\n  selectListWaterOfDay,\n  selectMonthPercentage,\n  selectWaterRate,\n} from '../../redux/water/selectors';\n\nimport { useTranslation } from 'react-i18next';\n\nconst Calendar = () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const percentagePerMonth = useSelector(selectMonthPercentage);\n  const waterPerDay = useSelector(selectListWaterOfDay);\n  const dailyWaterRate = useSelector(selectWaterRate);\n\n  const [todayDate] = useState(new Date());\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [currentYear, setCurrentYear] = useState(new Date().getFullYear());\n  const monthName = currentDate.toLocaleString('en-US', { month: 'long' });\n  const month = currentDate.getMonth() + 1;\n\n  useEffect(() => {\n    dispatch(getMonthPercentageThunk(`${currentYear}-${month}`));\n  }, [month, currentYear, dispatch, waterPerDay, dailyWaterRate]);\n\n  const goToPreviousMonth = () => {\n    const previousMonth = new Date(\n      currentDate.getFullYear(),\n      currentDate.getMonth() - 1\n    );\n    setCurrentDate(previousMonth);\n    if (currentDate.getMonth() === 0) {\n      setCurrentYear(currentYear - 1);\n    }\n  };\n\n  const goToNextMonth = () => {\n    if (currentDate.getMonth() === 11) {\n      setCurrentYear(currentYear + 1);\n    }\n    const nextMonth = new Date(\n      currentDate.getFullYear(),\n      currentDate.getMonth() + 1\n    );\n    if (\n      currentDate.getFullYear() < todayDate.getFullYear() ||\n      (currentDate.getFullYear() === todayDate.getFullYear() &&\n        currentDate.getMonth() < todayDate.getMonth())\n    ) {\n      setCurrentDate(nextMonth);\n    }\n  };\n\n  return (\n    <CalendarWrapper>\n      <TitleWrapper>\n        <MonthText>{t('calendar.month')}</MonthText>\n        <div>\n          <SvgIcon onClick={goToPreviousMonth} width={6} height={10}>\n            <use href={`${icons}#icon-chevron-left`}></use>\n          </SvgIcon>\n          <MonthYearText>\n            {monthName}, {currentYear}\n          </MonthYearText>\n          <SvgIcon onClick={goToNextMonth} width={6} height={10}>\n            <use href={`${icons}#icon-chevron-right`}></use>\n          </SvgIcon>\n        </div>\n      </TitleWrapper>\n      <Ul>\n        {percentagePerMonth.length > 0 &&\n          percentagePerMonth.map(\n            ({ waterRate, date, percentOfWaterRate, recordsCount }) => {\n              return (\n                <Popup\n                  style={{ width: '280px' }}\n                  key={date}\n                  trigger={\n                    <LiItem>\n                      <LiCircle $percentage={percentOfWaterRate}>\n                        {parseInt(date)}\n                      </LiCircle>\n                      <ProcentageWater>\n                        {percentOfWaterRate ? percentOfWaterRate : 0}%\n                      </ProcentageWater>\n                    </LiItem>\n                  }\n                  position={[\n                    'top left',\n                    'top right',\n                    'center center',\n                    'right center',\n                  ]}\n                  on=\"click\"\n                  closeOnDocumentClick\n                  keepTooltipInside={true}\n                  arrow={false}\n                  offsetX={8}\n                  offsetY={8}\n                >\n                  <PopUpCard\n                    date={date}\n                    waterRate={waterRate}\n                    percentOfWaterRate={percentOfWaterRate}\n                    recordsCount={recordsCount}\n                  />\n                </Popup>\n              );\n            }\n          )}\n      </Ul>\n    </CalendarWrapper>\n  );\n};\n\nexport default Calendar;\n","import styled from 'styled-components';\nimport Dialog from '@mui/material/Dialog';\n\nexport const DailyNormaWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 12px;\n`;\nexport const DailyNormaHeader = styled.h4`\n  font-family: 'Roboto';\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 1.33;\n  color: $primary-color-black;\n  text-align: center;\n  white-space: nowrap;\n`;\n\nexport const WaterRateWrapper = styled.div`\n  display: flex;\n  gap: 12px;\n`;\nexport const WaterRateParagraph = styled.p`\n  font-family: 'Roboto';\n  font-weight: 700;\n  font-size: 22px;\n  line-height: 1;\n  color: var(--primary-color-blue);\n  @media screen and (min-width: 768px) {\n    font-size: 24px;\n  }\n  @media screen and (min-width: 1440px) {\n  }\n`;\nexport const DailyNormaButton = styled.button`\nfont-family: \"Roboto\"; \nfont-size: 16px;\nline-height: 1.25;\ncolor: #8baeff;\nbackground-color: transparent;\nborder: none;\n&:hover {\n    cursor: pointer;\n    color: var(--secondary-color-orange);\n   transition: box-shadow 0.25s cubic-bezier(0.4, 0, 0.2, 1); \n  }\n}\n`;\nexport const DailyNormaDialog = styled(Dialog)`\n  width: 100%;\n  height: 100%;\n  overflow: auto;\n`;\n\nexport const ModalWrapper = styled.div`\n  border-radius: 10px;\n  padding: 24px 12px;\n  width: 280px;\n  height: 816px;\n  margin: 40px auto 0px auto;\n  position: absolute;\n  top: 0px;\n  background-color: var(--primary-color-white);\n  @media screen and (min-width: 768px) {\n    padding: 32px 24px;\n    margin: 40px 32px auto 32px;\n    width: 704px;\n    height: 696px;\n  }\n  @media screen and (min-width: 1440px) {\n    width: 592px;\n    height: 712px;\n\n    margin: 44px auto;\n  }\n`;\n\nexport const ModalCloseBtn = styled.button``;\nexport const Modalsvg = styled.svg`\n  width: 24px;\n  height: 24px;\n  fill: transparent;\n  stroke: var(--primary-color-blue);\n  &:hover,\n  &:focus {\n    cursor: pointer;\n    stroke: var(--secondary-color-orange);\n   transition: box-shadow 0.25s cubic-bezier(0.4, 0, 0.2, 1); \n`;\n\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 24px;\n`;\n\nexport const ModalHeader = styled.h3`\n  font-weight: 500;\n  font-family: 'Roboto';\n  font-size: 26px;\n  line-height: 1.23;\n  color: var(--primary-color-black);\n`;\n\nexport const FormulaWrapper = styled.div`\n  @media screen and (min-width: 768px) {\n    display: flex;\n    gap: 24px;\n  }\n`;\nexport const ModalParagraphForGirl = styled.p`\n    font-size: 16px;\n    font-family: \"Roboto\"; \nline-height: 1.25;\nmargin-bottom: 16px;\ncolor: var(--primary-color-black);\n}`;\n\nexport const ModalParagraphForMan = styled.p`\n  font-size: 16px;\n  font-family: 'Roboto';\n  line-height: 1.25;\n  margin-bottom: 12px;\n  color: var(--primary-color-black);\n`;\n\nexport const ModalSpan = styled.span`\n  font-size: 18px;\n  font-family: 'Roboto';\n  line-height: 1.33;\n  color: var(--primary-color-blue);\n`;\n\nexport const ModalInfo = styled.p`\n  font-size: 12px;\n  font-family: 'Roboto';\n  line-height: 1.33;\n  color: #8f8f8f;\n  border: 1px solid var(--secondary-color-blue-3);\n  border-radius: 10px;\n  padding: 10px;\n  width: 256px;\n  padding: 10px;\n  margin-bottom: 24px;\n  height: 100px;\n  @media screen and (min-width: 768px) {\n    padding: 10px;\n    width: 656px;\n    height: 52px;\n  }\n  @media screen and (min-width: 1440px) {\n    width: 544px;\n    height: 68px;\n  }\n`;\n\nexport const ModalForm = styled.form``;\n\nexport const ModalCalc = styled.p`\n  font-weight: 500;\n  font-family: 'Roboto';\n  font-size: 18px;\n  line-height: 1.11;\n  margin-bottom: 16px;\n  color: var(--primary-color-black);\n`;\n\nexport const GenderWrapper = styled.div`\n  display: flex;\n  margin-bottom: 16px;\n`;\n\nexport const ModalLabel = styled.label`\n  font-family: 'Roboto';\n  font-size: 16px;\n  font-family: 'Roboto';\n  line-height: 1.25;\n  margin-bottom: 8px;\n  color: var(--primary-color-black);\n`;\n\nexport const ModalRadioInputWoman = styled.input.attrs({\n  type: 'radio',\n  id: 'woman',\n})`\n  appearance: none;\n  width: 14px;\n  height: 14px;\n  border: 1px solid var(--primary-color-blue);\n  border-radius: 50%;\n  outline: none;\n  box-shadow: 0 0 5px var(--primary-color-blue);\n\n  &:before {\n    content: '';\n    display: block;\n    width: 8px;\n    height: 8px;\n    margin: 2px;\n    border-radius: 50%;\n  }\n\n  &:checked:before {\n    background: var(--primary-color-blue);\n  }\n`;\n\nexport const ModalRadioInputMan = styled.input.attrs({\n  type: 'radio',\n  id: 'man',\n})`\n  appearance: none;\n  width: 14px;\n  height: 14px;\n  border: 1px solid var(--primary-color-blue);\n  border-radius: 50%;\n  outline: none;\n  box-shadow: 0 0 5px var(--primary-color-blue);\n\n  &:before {\n    content: '';\n    display: block;\n    width: 8px;\n    height: 8px;\n    margin: 2px;\n    border-radius: 50%;\n  }\n\n  &:checked:before {\n    background: var(--primary-color-blue);\n  }\n`;\nexport const RadioLabel = styled.label`\n  margin-right: 24px;\n  font-size: 16px;\n  font-family: 'Roboto';\n  line-height: 125%;\n  color: var(--primary-color-black);\n`;\n\nexport const InputWrapper = styled.div`\n  margin-bottom: 16px;\n  display: flex;\n  flex-direction: column;\n  width: 256px;\n  height: 72px;\n  @media screen and (min-width: 768px) {\n    width: 656px;\n  }\n  @media screen and (min-width: 1440px) {\n    width: 544px;\n    height: 92px;\n    margin-bottom: 0px;\n  }\n`;\n\nexport const ModalInput = styled.input`\n  border: 1px solid #d7e3ff;\n  font-family: 'Roboto';\n  border-radius: 6px;\n  padding: 12px 10px;\n  width: 256px;\n  height: 44px;\n  outline: none;\n  color: var(--primary-color-blue);\n  &:: hover,\n&:focus {\n    border: 3px solid #d7e3ff;\n  }\n  &::placeholder {\n    color: var(--primary-color-blue);\n  }\n  @media screen and (min-width: 768px) {\n    width: 656px;\n  }\n  @media screen and (min-width: 1440px) {\n    width: 544px;\n  }\n`;\n\nexport const AmountWrapper = styled.div`\n  display: flex;\n  margin-top: 68px;\n  align-items: center;\n  @media screen and (min-width: 768px) {\n    margin-top: 32px;\n  }\n  @media screen and (min-width: 1440px) {\n    margin-top: 16px;\n  }\n`;\n\nexport const Amount = styled.p`\n  width: 190px;\n  font-size: 16px;\n  font-family: 'Roboto';\n  line-height: 1.25;\n  color: var(--primary-color-black);\n  @media screen and (min-width: 768px) {\n    width: 376px;\n  }\n`;\n\nexport const ModalButton = styled.button`\n  border-radius: 10px;\n  font-family: 'Roboto';\n  padding: 8px 30px;\n  width: 256px;\n  height: 36px;\n  box-shadow: 0 4px 8px 0 rgba(64, 123, 255, 0.34);\n  background: var(--primary-color-blue);\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.25;\n  text-align: center;\n  position: absolute;\n  bottom: 24px;\n  color: var(--primary-color-white);\n\n  &:hover,\n  &:focus {\n    cursor: pointer;\n    box-shadow: 0 4px 8px 0 rgba(64, 123, 255, 0.34);\n    transition: box-shadow 0.25s cubic-bezier(0.4, 0, 0.2, 1);\n  }\n  @media screen and (min-width: 768px) {\n    bottom: 32px;\n    right: 24px;\n    padding: 10px 30px;\n    width: 160px;\n    height: 44px;\n  }\n`;\n\nexport const WaterIntakeSpan = styled.span`\n  font-weight: 700;\n  font-family: 'Roboto';\n  font-size: 18px;\n  line-height: 1.33;\n  margin-left: 6px;\n  color: var(--primary-color-blue);\n`;\n\nexport const InputWrapperWater = styled.div`\n  margin-top: 16px;\n  margin-bottom: 16px;\n  display: flex;\n  flex-direction: column;\n  width: 256px;\n  height: 72px;\n  &:invalid {\n    color: var(--secondary-color-red);\n    border-color: var(--secondary-color-red);\n  }\n  @media screen and (min-width: 768px) {\n    margin-top: 24px;\n    width: 656px;\n    margin-bottom: 24px;\n  }\n  @media screen and (min-width: 1440px) {\n    width: 544px;\n    height: 80px;\n  }\n`;\n\nexport const ModalLabelWater = styled.label`\n  font-weight: 500;\n  font-family: \"Roboto\"; \n  font-size: 18px;\n  margin-bottom: 8px;\n  line-height: 1.11;\n  color: var(--primary-color-black);\n  }\n  @media screen and (min-width: 768px) {\n    margin-bottom: 16px;\n  }\n`;\nexport const ErrorSpan = styled.span`\n  color: red;\n  display: none;\n  font-family: 'Roboto';\n  font-size: 12px;\n  line-height: 1.33;\n  margin-top: 4px;\n  @media screen and (min-width: 768px) {\n    margin-top: 8px;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { updateWaterRateThunk } from '../../../redux/auth/operations';\nimport {\n  ModalWrapper,\n  Modalsvg,\n  AmountWrapper,\n  ModalLabelWater,\n  InputWrapperWater,\n  ModalCloseBtn,\n  ButtonWrapper,\n  InputWrapper,\n  ModalHeader,\n  GenderWrapper,\n  ModalParagraphForGirl,\n  ModalParagraphForMan,\n  ModalSpan,\n  ModalInfo,\n  FormulaWrapper,\n  ModalForm,\n  ModalCalc,\n  ModalLabel,\n  ModalRadioInputWoman,\n  ModalRadioInputMan,\n  RadioLabel,\n  ModalInput,\n  Amount,\n  ModalButton,\n  WaterIntakeSpan,\n} from '../DailyNormaStyled';\nimport { icons } from '../../../assets';\n\nconst DailyModal = ({ onClose }) => {\n  const dispatch = useDispatch();\n  const [gender, setGender] = useState('woman');\n  const [weight, setWeight] = useState('');\n  const [activityTime, setActivityTime] = useState('');\n  const [requiredWater, setRequiredWater] = useState(0);\n  const [waterToDrink, setwaterToDrink] = useState('');\n\n  const handleWeightChange = event => {\n    let weightValue = parseFloat(event.target.value);\n    if (isNaN(weightValue)) {\n      weightValue = '';\n    }\n    setWeight(weightValue);\n    calculateWaterRate(weightValue, activityTime);\n  };\n\n  const handleActivityTimeChange = event => {\n    let activityTimeValue = parseFloat(event.target.value);\n    if (isNaN(activityTimeValue)) {\n      activityTimeValue = 0;\n    }\n    setActivityTime(activityTimeValue);\n    calculateWaterRate(weight, activityTimeValue);\n  };\n\n  useEffect(() => {\n    calculateWaterRate(gender, weight, activityTime);\n  }, [weight, activityTime, gender]);\n\n  const calculateWaterRate = (gender, weight, activityTime) => {\n    let waterCalculated = 0;\n    if (gender === 'woman') {\n      waterCalculated = weight * 0.03 + activityTime * 0.4;\n    } else if (gender === 'man') {\n      waterCalculated = weight * 0.04 + activityTime * 0.6;\n    }\n    if (waterCalculated === 0) {\n      setRequiredWater(0);\n      return;\n    }\n    setRequiredWater(waterCalculated.toFixed(1));\n  };\n\n  const handleInputChange = event => {\n    setwaterToDrink(event.target.value);\n    let newWaterRate = parseFloat(event.target.value);\n    if (isNaN(newWaterRate)) {\n      setWeight('');\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!waterToDrink) return;\n    dispatch(updateWaterRateThunk({ amountOfWater: waterToDrink }));\n    onClose();\n  };\n\n  return (\n    <ModalWrapper>\n      <ButtonWrapper>\n        <ModalHeader>My daily norma</ModalHeader>\n        <ModalCloseBtn><Modalsvg onClick={onClose}>\n          <use href={`${icons}#icon-x-mark`}></use>\n        </Modalsvg></ModalCloseBtn>\n      </ButtonWrapper>\n      <FormulaWrapper>\n        <ModalParagraphForGirl>\n          For girl:<ModalSpan>V=(M*0,03) + (T*0,4)</ModalSpan>\n        </ModalParagraphForGirl>\n        <ModalParagraphForMan>\n          For man:<ModalSpan>V=(M*0,04) + (T*0,6)</ModalSpan>\n        </ModalParagraphForMan>\n      </FormulaWrapper>\n      <ModalInfo>\n        * V is the volume of the water norm in liters per day, M is your body\n        weight, T is the time of active sports, or another type of activity\n        commensurate in terms of loads (in the absence of these, you must set 0)\n      </ModalInfo>\n      <ModalForm onSubmit={handleSubmit}>\n        <ModalCalc>Calculate your rate:</ModalCalc>\n       \n          <GenderWrapper>\n            <ModalRadioInputWoman\n              id='woman'\n              type=\"radio\"\n              value=\"girl\"\n              checked={gender === 'woman'}\n              onChange={() => setGender('woman')}\n            />\n            <RadioLabel htmlFor=\"woman\">For woman</RadioLabel>\n             <ModalRadioInputMan\n              id='man'\n              type=\"radio\"\n              value=\"man\"\n              checked={gender === 'man'}\n              onChange={() => setGender('man')}\n            />\n<RadioLabel htmlFor=\"man\">For man</RadioLabel>\n          </GenderWrapper>\n        \n        <InputWrapper>\n          <ModalLabel>Your weight in kilograms:</ModalLabel>\n          <ModalInput\n            type=\"text\"\n            value={weight}\n            onChange={handleWeightChange}\n             placeholder='0'\n          />\n        </InputWrapper>\n\n        <InputWrapper>\n          <ModalLabel>\n            The time of active participation in sports or other activities with\n            a high physical. load in hours:\n          </ModalLabel>\n          <ModalInput\n            type=\"text\"\n            value={activityTime}\n            onChange={handleActivityTimeChange}\n             placeholder='0'\n          />\n        </InputWrapper>\n        <AmountWrapper>\n          <Amount>The required amount of water in liters per day:</Amount>\n          <WaterIntakeSpan>{requiredWater} L</WaterIntakeSpan>\n        </AmountWrapper>\n        <InputWrapperWater>\n          <ModalLabelWater>\n            Write down how much water you will drink:\n          </ModalLabelWater>\n          <ModalInput\n            required\n            type=\"text\"\n            value={waterToDrink}\n            onChange={handleInputChange}\n            min={1}\n            max={15000}\n         placeholder='0'\n          />\n        </InputWrapperWater>\n        <ModalButton type=\"submit\">Save</ModalButton>\n      </ModalForm>\n    </ModalWrapper>\n  );\n};\n\nexport default DailyModal;\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectWaterRate } from '../../redux/water/selectors';\nimport DailyModal from './DailyModal/DailyModal';\n\nimport { StyledEngineProvider } from '@mui/material/styles';\nimport {\n  DailyNormaWrapper,\n  WaterRateWrapper,\n  DailyNormaHeader,\n  WaterRateParagraph,\n  DailyNormaDialog,\n  DailyNormaButton,\n} from './DailyNormaStyled';\nimport { useTranslation } from 'react-i18next';\n\nexport const DailyNorma = () => {\n  const { t } = useTranslation();\n  const waterRate = useSelector(selectWaterRate);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const handleEditClick = () => {\n    setIsModalOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <DailyNormaWrapper>\n      <DailyNormaHeader>{t('daily_norma.norma')}</DailyNormaHeader>\n      <WaterRateWrapper>\n        <WaterRateParagraph>{waterRate} L</WaterRateParagraph>\n        <DailyNormaButton onClick={handleEditClick}>Edit</DailyNormaButton>\n      </WaterRateWrapper>\n\n      <StyledEngineProvider injectFirst>\n        <DailyNormaDialog\n          open={isModalOpen} onClose={handleCloseModal}\n          PaperComponent={() => <DailyModal onClose={handleCloseModal} />}\n        ></DailyNormaDialog>\n      </StyledEngineProvider>\n    </DailyNormaWrapper>\n  );\n};\n","import styled from 'styled-components';\nimport Button from '@mui/material/Button';\n\nexport const ModalWrap = styled.div`\n  width: 800px;\n`;\n\nexport const ModalContent = styled.div`\n  width: 800px;\n`;\n\nexport const ModalReverse = styled.div`\n  // display: flex;\n  // flex-direction: column-reverse;\n`;\n\nexport const OpenButton = styled.button`\n  cursor: pointer;\n  // width: 182px;\n  height: 24px;\n  font-family: Roboto;\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 24px;\n  text-align: left;\n  color: #407bff;\n  // border: 1px solid #407BFF;\n  &:before {\n    content: '+';\n    margin: 0 8px 0 0;\n  }\n`;\n\nexport const CustomButton = ({\n  children,\n  onClick,\n  color,\n  backgroundColor,\n  hoverColor,\n}) => (\n  <Button\n    onClick={onClick}\n    sx={{\n      marginLeft: '0px !important',\n      padding: '10px 30px',\n      borderRadius: '10px',\n      backgroundColor,\n      color,\n      minWidth: 160,\n      height: 44,\n      textTransform: 'capitalize',\n      lineHeight: 1.33,\n      '&:hover': {\n        boxShadow: `0 4px 8px 0 ${hoverColor}`,\n        backgroundColor,\n      },\n      '@media only screen and (max-width: 768px)': {\n        width: '100%',\n        height: '36px',\n        padding: '8px 30px',\n        marginLeft: '0px !important',\n      },\n    }}\n  >\n    {children}\n  </Button>\n);\n","import React, { useState } from 'react';\nimport Dialog from '@mui/material/Dialog';\nimport { OpenButton, ModalReverse} from './ModalWL.styled';\nimport WaterListModal from 'components/WaterListModal/WaterListModal';\nimport { useTranslation } from 'react-i18next';\n\nconst ModalAddEdit = ({ onSave }) => {\n  const [waterData, setWaterData] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  const [isVisible, setIsVisible] = useState(true);\n  const { t } = useTranslation();\n\n  const handleSaveWaterData = (result, time) => {\n    setWaterData([...waterData, { result, time }]);\n  };\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n  };\n\n  const handleOpenModal = (isEditing) => {\n    setIsModalOpen(true);\n    setIsEditing(isEditing);\n    setIsVisible(!isEditing);\n  };\n\n  return (\n    <ModalReverse>\n      <Dialog open={isModalOpen} onClose={handleCloseModal} maxWidth=\"800px\">\n        <WaterListModal\n          onSave={(result, time) => {\n            handleSaveWaterData(result, time);\n            onSave(result, time);\n            handleCloseModal();\n          }}\n          onClose={handleCloseModal}\n          title={isEditing ?  t('water_tracker_mod.editTheEntered') : t('water_tracker_mod.add')}\n          isVisible={!isVisible}\n        />\n      </Dialog>\n      <OpenButton onClick={() => handleOpenModal(false)}>{t('water_tracker_mod.add')}</OpenButton>\n    </ModalReverse>\n  );\n};\n\nexport default ModalAddEdit;\n","import styled from 'styled-components';\n\nexport const ListTitle = styled.h3`\n  font-family: Roboto;\n  font-size: 26px;\n  font-weight: 500;\n  line-height: 32px;\n  text-align: left;\n  color: var(--primary-color-black);\n`;\n\nexport const Title = styled.h3`\n  font-family: Roboto;\n  font-size: 24px;\n  font-weight: 500;\n  line-height: 30px;\n`;\nexport const List = styled.ul`\n  width: 100%;\n  height: 200px;\n  overflow-y: auto;\n`;\nexport const ListElem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  border-bottom: 1px solid var(--secondary-color-blue-3);\n  padding: 12px 0;\n`;\nexport const ListElemInfoContainer = styled.div`\n  width: 70%;\n  display: flex;\n  justify-content: start;\n  align-items: center;\n  gap: 12px;\n\n  @media only screen and (min-width: 768px) {\n    width: 50%;\n  }\n`;\nexport const ListElemButtonsContainer = styled.div`\n  width: 30%;\n  display: flex;\n  justify-content: end;\n  align-items: center;\n  gap: 18px;\n\n  @media only screen and (min-width: 768px) {\n    width: 50%;\n  }\n`;\nexport const Icon = styled.svg`\n  width: 24px;\n  height: 24px;\n  fill: #407bff;\n`;\nexport const ResultMl = styled.span`\n  font-family: Roboto;\n  font-size: 18px;\n  font-weight: 400;\n  line-height: 24px;\n  color: var(--primary-color-blue);\n`;\nexport const ResultTime = styled.span`\n  font-family: Roboto;\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 24px;\n  color: var(--primary-color-black);\n`;\nexport const ChangeWaterBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 24px;\n  height: 24px;\n  background-color: transparent;\n  cursor: pointer;\n`;\nexport const DeleteWaterBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 24px;\n  height: 24px;\n  background-color: transparent;\n  cursor: pointer;\n`;\n\nexport const DeleteBtnIcon = styled.svg`\n  width: 16px;\n  height: 16px;\n  stroke: var(--secondary-color-red);\n  fill: transparent;\n`;\nexport const ChangeBtnIcon = styled.svg`\n  width: 16px;\n  height: 16px;\n  stroke: var(--secondary-color-blue-2);\n  fill: transparent;\n  &:hover {\n    stroke: var(--secondary-color-orange);\n  }\n`;\n","import React from 'react';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport IconButton from '@mui/material/IconButton';\n\nimport { CustomButton } from './ModalWL.styled';\n\n// import { Modalsvg } from 'components/DailyNorma/DailyNormaStyled';\nimport sprite from '../../assets/icons/sprite.svg';\nimport { IconBtn } from 'components/WaterListModal/WaterListModal.styled';\nconst ModalDellWater = ({ id, deleteWater, isModalDell, setIsModalDell }) => {\n  const handleClose = () => {\n    setIsModalDell(false);\n  };\n\n  const handleDelete = () => {\n    deleteWater(id);\n    handleClose();\n  };\n\n  return (\n    <Dialog\n      open={isModalDell}\n      onClose={handleClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n      sx={{\n        '& .MuiDialog-paper': {\n          borderRadius: '10px',\n          padding: '32px 24px',\n          margin: '0 20px',\n          width: '592px',\n          minHeight: '208px',\n        },\n      }}\n    >\n      <DialogTitle\n        id=\"alert-dialog-title\"\n        sx={{\n          padding: '0',\n          display: 'flex',\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          marginBottom: '24px',\n          fontFamily: 'Roboto',\n          fontWeight: '500',\n          fontSize: '26px',\n          color: '#2f2f2f',\n        }}\n      >\n        Delete entry\n        <IconButton\n          aria-label=\"close\"\n          onClick={handleClose}\n          sx={{\n            color: '#407bff',\n            '&:hover': {\n              backgroundColor: 'transparent',\n            },\n          }}\n        >\n          <IconBtn>\n            <use href={`${sprite}#icon-close-x`}></use>\n          </IconBtn>\n        </IconButton>\n      </DialogTitle>\n      <DialogContent\n        sx={{\n          padding: '0',\n          marginBottom: '24px',\n          fontSize: '18px',\n        }}\n      >\n        <DialogContentText\n          id=\"alert-dialog-description\"\n          sx={{\n            color: '#2f2f2f',\n            fontSize: '18px',\n            lineHeight: 1.11,\n            fontWeight: 500,\n          }}\n        >\n          Are you sure you want to delete the entry?\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions\n        sx={{\n          padding: 0,\n          width: 344,\n          marginLeft: 'auto',\n          display: 'flex',\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          '@media only screen and (max-width: 768px)': {\n            flexDirection: 'column-reverse',\n            gap: '24px',\n            marginLeft: '0',\n            width: '100%',\n          },\n        }}\n      >\n        <CustomButton\n          onClick={handleClose}\n          color=\"#407bff\"\n          backgroundColor=\"#d7e3ff\"\n          hoverColor=\"rgba(64, 123, 255, 0.34)\"\n        >\n          Cancel\n        </CustomButton>\n        <CustomButton\n          onClick={handleDelete}\n          color=\"#fff\"\n          backgroundColor=\"#ef5050\"\n          hoverColor=\"rgba(239, 80, 80, 0.34)\"\n        >\n          Delete\n        </CustomButton>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default ModalDellWater;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ModalAddEdit from 'components/ModalWL/ModalAddEdit';\nimport WaterListModal from 'components/WaterListModal/WaterListModal';\nimport {\n  ListTitle,\n  Title,\n  List,\n  ListElem,\n  ListElemInfoContainer,\n  ListElemButtonsContainer,\n  Icon,\n  ResultMl,\n  ResultTime,\n  ChangeWaterBtn,\n  DeleteWaterBtn,\n  DeleteBtnIcon,\n  ChangeBtnIcon,\n} from './TodayList.styled';\nimport sprite from '../../assets/icons/sprite.svg';\nimport Dialog from '@mui/material/Dialog';\nimport {\n  getWaterPerDayThunk,\n  addWaterRateThunk,\n  deleteWaterThunk,\n  updateWaterThunk,\n} from '../../redux/water/operations';\nimport { selectListWaterOfDay } from '../../redux/water/selectors';\n\nimport { useTranslation } from 'react-i18next';\n\nimport ModalDellWater from 'components/ModalWL/ModalDellWater';\n\n\nconst TodayList = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isModalDell, setIsModalDell] = useState(false);\n  const [idWaterToDell, setIdWaterToDell] = useState(null);\n  const [selectedItemIndex, setSelectedItemIndex] = useState(null);\n  const [isEditing, setIsEditing] = useState(false);\n  const [isVisible, setIsVisible] = useState(true);\n  const dispatch = useDispatch();\n  const listWaterOfDay = useSelector(selectListWaterOfDay);\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    dispatch(getWaterPerDayThunk());\n  }, [dispatch]);\n\n  useEffect(() => {});\n\n  const handleSaveWaterData = (result, time) => {\n    dispatch(addWaterRateThunk({ value: result, time }));\n  };\n\n  const handleEditWaterData = (index, result, time) => {\n    setSelectedItemIndex(index);\n    setIsModalOpen(true);\n    setIsEditing(isEditing);\n    setIsVisible(true);\n  };\n\n  const handleDeleteWaterData = id => {\n    dispatch(deleteWaterThunk(id));\n  };\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n    setSelectedItemIndex(null);\n  };\n\n  const handleSaveData = (value, time) => {\n    if (selectedItemIndex !== null) {\n      const updatedWaterData = {\n        _id: listWaterOfDay[selectedItemIndex]._id,\n        value,\n        time,\n      };\n      dispatch(updateWaterThunk(updatedWaterData));\n      handleCloseModal();\n    }\n  };\n\n  return (\n    <>\n      <ListTitle>{t('today_list.today')}</ListTitle>\n      <List>\n        <Title />\n        {listWaterOfDay?.map((item, index) => (\n          <ListElem key={item._id}>\n            <ListElemInfoContainer>\n              <Icon>\n                <use href={`${sprite}#icon-glass`} />\n              </Icon>\n              <ResultMl>{item.value} ml</ResultMl>\n              <ResultTime>{item.time}</ResultTime>\n            </ListElemInfoContainer>\n            <ListElemButtonsContainer>\n              <ChangeWaterBtn\n                onClick={() =>\n                  handleEditWaterData(index, item.value, item.time)\n                }\n              >\n                <ChangeBtnIcon>\n                  <use href={`${sprite}#icon-edit-pensil`} />\n                </ChangeBtnIcon>\n              </ChangeWaterBtn>\n\n              <DeleteWaterBtn\n                onClick={() => {\n                  setIsModalDell(true);\n                  setIdWaterToDell(item._id);\n                }}\n              >\n                <DeleteBtnIcon>\n                  <use href={`${sprite}#icon-trash-bin`} />\n                </DeleteBtnIcon>\n              </DeleteWaterBtn>\n            </ListElemButtonsContainer>\n          </ListElem>\n        ))}\n      </List>\n\n      <ModalAddEdit onSave={handleSaveWaterData} />\n      <ModalDellWater\n        id={idWaterToDell}\n        deleteWater={handleDeleteWaterData}\n        setIsModalDell={setIsModalDell}\n        isModalDell={isModalDell}\n      />\n      <Dialog open={isModalOpen} onClose={handleCloseModal} maxWidth=\"800px\">\n        <WaterListModal\n          onSave={handleSaveData}\n          onClose={handleCloseModal}\n          result={listWaterOfDay[selectedItemIndex]?.result}\n          time={listWaterOfDay[selectedItemIndex]?.time}\n          title={isEditing ? t('water_tracker_mod.add') :  t('water_tracker_mod.editTheEntered')}\n          isVisible={isVisible}\n          initialWater={listWaterOfDay?.[selectedItemIndex]?.value}\n          initialTime={listWaterOfDay?.[selectedItemIndex]?.time}\n        />\n      </Dialog>\n    </>\n  );\n};\n\nexport default TodayList;\n","import Container from 'components/Container/Container';\nimport { WaterTracker } from 'components/WaterTracker/WaterTracker';\nimport {\n  HomePageWrapper,\n  DailyNormaWrapper,\n  MyDailyNorma,\n  MyDailyTracker,\n  TodayMonthWrapper,\n} from './HomePageStyled';\nimport Calendar from 'components/Calendar/Calendar';\nimport { DailyNorma } from 'components/DailyNorma/DailyNorma';\nimport Background from 'components/Background/Background';\nimport TodayList from 'components/TodayList/TodayList';\n\nconst HomePage = () => {\n  return (\n    <>\n      <Background />\n      <Container>\n        <HomePageWrapper>\n          <DailyNormaWrapper>\n            <MyDailyNorma>\n              <DailyNorma />\n            </MyDailyNorma>\n            <MyDailyTracker>\n              <WaterTracker></WaterTracker>\n            </MyDailyTracker>\n          </DailyNormaWrapper>\n          <TodayMonthWrapper>\n            <TodayList />\n            <Calendar />\n          </TodayMonthWrapper>\n        </HomePageWrapper>\n      </Container>\n    </>\n  );\n};\n\nexport default HomePage;\n"],"names":["_ref","children","_jsx","WrapperContainer","ProgressPanelContainer","styled","_templateObject","_taggedTemplateLiteral","TodayTitle","_templateObject2","ProgressContainer","_templateObject3","ProgressInput","_templateObject4","ProgressMarks","_templateObject5","ProgressPercents","_templateObject6","AddWaterBtn","_templateObject7","_templateObject8","selectMonthPercentage","state","water","itemsPerMonth","selectWaterRate","auth","user","waterRate","selectListWaterOfDay","listWaterOfDay","Container","ListHeader","Title","CloseButton","ResultContainer","WaterGlass","ResultMl","ResultTime","_templateObject9","DataContainer","_templateObject10","DataTitle","_templateObject11","DataText","_templateObject12","DataBtnsContainer","_templateObject13","DataBtn","_templateObject14","DataResult","_templateObject15","LabelTime","_templateObject16","LabelMl","_templateObject17","InputTime","TextField","_templateObject18","MenuItemCustom","MenuItem","_templateObject19","InputMl","_templateObject20","SaveContainer","_templateObject21","SaveResultTxt","_templateObject22","SaveBtn","_templateObject23","IconBtn","_templateObject24","getCurrentTime","currentDate","Date","hour","getHours","toString","padStart","minutes","getMinutes","formattedHour","roundedMinutes","Math","ceil","formattedMinute","concat","generateHours","hours","i","j","push","onSave","onClose","title","isVisible","_ref$initialWater","initialWater","_ref$initialTime","initialTime","_useState","useState","_useState2","_slicedToArray","result","setResult","_useState3","_useState4","time","setTime","t","useTranslation","_jsxs","onClick","href","icons","value","select","onBlur","event","target","onChange","_toConsumableArray","map","index","newValue","inputValue","parseInt","localStorage","setItem","waterData","setWaterData","isModalOpen","setIsModalOpen","_useState5","_useState6","isEditing","setIsEditing","_useState7","_useState8","setIsVisible","handleCloseModal","_Fragment","Dialog","open","maxWidth","WaterListModal","handleSaveWaterData","handleOpenModal","WaterTracker","dispatch","useDispatch","percentages","setPercentages","todayNorma","useSelector","todayData","useEffect","getWaterPerDayThunk","todayValue","reduce","acc","style","backgroundSize","type","min","max","step","ModalAdd","addWaterRateThunk","HomePageWrapper","DailyNormaWrapper","backgroundImage","MyDailyNorma","MyDailyTracker","TodayMonthWrapper","TitleWrapper","MonthText","SvgIcon","MonthYearText","Ul","LiItem","LiCircle","props","$percentage","ProcentageWater","CalendarWrapper","PopUpWrap","DateText","WaterInfo","AccentColor","date","percentOfWaterRate","recordsCount","percentagePerMonth","waterPerDay","dailyWaterRate","todayDate","setCurrentDate","getFullYear","currentYear","setCurrentYear","monthName","toLocaleString","month","getMonth","getMonthPercentageThunk","previousMonth","width","height","nextMonth","length","Popup","trigger","position","on","closeOnDocumentClick","keepTooltipInside","arrow","offsetX","offsetY","PopUpCard","DailyNormaHeader","WaterRateWrapper","WaterRateParagraph","DailyNormaButton","DailyNormaDialog","ModalWrapper","ModalCloseBtn","Modalsvg","ButtonWrapper","ModalHeader","FormulaWrapper","ModalParagraphForGirl","ModalParagraphForMan","ModalSpan","ModalInfo","ModalForm","ModalCalc","GenderWrapper","ModalLabel","ModalRadioInputWoman","id","ModalRadioInputMan","RadioLabel","InputWrapper","ModalInput","_templateObject25","AmountWrapper","_templateObject26","Amount","_templateObject27","ModalButton","_templateObject28","WaterIntakeSpan","_templateObject29","InputWrapperWater","_templateObject30","ModalLabelWater","_templateObject31","_templateObject32","gender","setGender","weight","setWeight","activityTime","setActivityTime","requiredWater","setRequiredWater","_useState9","_useState10","waterToDrink","setwaterToDrink","calculateWaterRate","waterCalculated","toFixed","onSubmit","e","preventDefault","updateWaterRateThunk","amountOfWater","checked","htmlFor","weightValue","parseFloat","isNaN","placeholder","activityTimeValue","required","newWaterRate","DailyNorma","StyledEngineProvider","injectFirst","PaperComponent","DailyModal","ModalReverse","OpenButton","CustomButton","color","backgroundColor","hoverColor","Button","sx","marginLeft","padding","borderRadius","minWidth","textTransform","lineHeight","boxShadow","ListTitle","List","ListElem","ListElemInfoContainer","ListElemButtonsContainer","Icon","ChangeWaterBtn","DeleteWaterBtn","DeleteBtnIcon","ChangeBtnIcon","deleteWater","isModalDell","setIsModalDell","handleClose","margin","minHeight","DialogTitle","display","flexDirection","justifyContent","marginBottom","fontFamily","fontWeight","fontSize","IconButton","sprite","DialogContent","DialogContentText","DialogActions","gap","_listWaterOfDay$selec","_listWaterOfDay$selec2","_listWaterOfDay$selec3","_listWaterOfDay$selec4","idWaterToDell","setIdWaterToDell","selectedItemIndex","setSelectedItemIndex","_useState11","_useState12","item","handleEditWaterData","_id","ModalAddEdit","ModalDellWater","deleteWaterThunk","updatedWaterData","updateWaterThunk","Background","TodayList","Calendar"],"sourceRoot":""}